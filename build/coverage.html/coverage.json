{"/home/travis/build/npmtest/node-npmtest-espree/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-espree/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_espree */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-espree/lib.npmtest_espree.js":{"path":"/home/travis/build/npmtest/node-npmtest-espree/lib.npmtest_espree.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":51}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":57}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_espree */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_espree = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_espree = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-espree/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-espree/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":50}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":64},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-espree && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_espree */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_espree","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_espree.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_espree.rollup.js'] =","            local.assetsDict['/assets.npmtest_espree.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_espree.__dirname + '/lib.npmtest_espree.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-espree/node_modules/espree/espree.js":{"path":"/home/travis/build/npmtest/node-npmtest-espree/node_modules/espree/espree.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":1,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":1,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":78,"291":78,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":80,"302":80,"303":1,"304":1,"305":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0,0,0],"7":[0,0,0,0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0,0,0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0,0,0,0,0,0,0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[1,0],"107":[78,0],"108":[1,0],"109":[1,0],"110":[80,0],"111":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":1},"fnMap":{"1":{"name":"assign","line":80,"loc":{"start":{"line":80,"column":30},"end":{"line":80,"column":54}}},"2":{"name":"resetExtra","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":22}}},"3":{"name":"normalizeEcmaVersion","line":128,"loc":{"start":{"line":128,"column":0},"end":{"line":128,"column":43}}},"4":{"name":"isValidNode","line":160,"loc":{"start":{"line":160,"column":0},"end":{"line":160,"column":27}}},"5":{"name":"esprimaFinishNode","line":186,"loc":{"start":{"line":186,"column":0},"end":{"line":186,"column":35}}},"6":{"name":"isValidToken","line":239,"loc":{"start":{"line":239,"column":0},"end":{"line":239,"column":30}}},"7":{"name":"wrapFinishNode","line":269,"loc":{"start":{"line":269,"column":0},"end":{"line":269,"column":36}}},"8":{"name":"(anonymous_8)","line":270,"loc":{"start":{"line":270,"column":37},"end":{"line":270,"column":68}}},"9":{"name":"(anonymous_9)","line":276,"loc":{"start":{"line":276,"column":23},"end":{"line":276,"column":42}}},"10":{"name":"(anonymous_10)","line":282,"loc":{"start":{"line":282,"column":28},"end":{"line":282,"column":43}}},"11":{"name":"(anonymous_11)","line":283,"loc":{"start":{"line":283,"column":41},"end":{"line":283,"column":52}}},"12":{"name":"(anonymous_12)","line":292,"loc":{"start":{"line":292,"column":33},"end":{"line":292,"column":53}}},"13":{"name":"(anonymous_13)","line":294,"loc":{"start":{"line":294,"column":41},"end":{"line":294,"column":81}}},"14":{"name":"(anonymous_14)","line":309,"loc":{"start":{"line":309,"column":37},"end":{"line":309,"column":61}}},"15":{"name":"(anonymous_15)","line":310,"loc":{"start":{"line":310,"column":41},"end":{"line":310,"column":56}}},"16":{"name":"(anonymous_16)","line":318,"loc":{"start":{"line":318,"column":36},"end":{"line":318,"column":59}}},"17":{"name":"(anonymous_17)","line":320,"loc":{"start":{"line":320,"column":41},"end":{"line":320,"column":67}}},"18":{"name":"(anonymous_18)","line":352,"loc":{"start":{"line":352,"column":31},"end":{"line":352,"column":42}}},"19":{"name":"(anonymous_19)","line":366,"loc":{"start":{"line":366,"column":24},"end":{"line":366,"column":68}}},"20":{"name":"(anonymous_20)","line":455,"loc":{"start":{"line":455,"column":49},"end":{"line":455,"column":72}}},"21":{"name":"(anonymous_21)","line":470,"loc":{"start":{"line":470,"column":26},"end":{"line":470,"column":40}}},"22":{"name":"(anonymous_22)","line":500,"loc":{"start":{"line":500,"column":38},"end":{"line":500,"column":62}}},"23":{"name":"(anonymous_23)","line":501,"loc":{"start":{"line":501,"column":41},"end":{"line":501,"column":57}}},"24":{"name":"tokenize","line":524,"loc":{"start":{"line":524,"column":0},"end":{"line":524,"column":33}}},"25":{"name":"(anonymous_25)","line":562,"loc":{"start":{"line":562,"column":33},"end":{"line":562,"column":44}}},"26":{"name":"convertAcornCommentToEsprimaComment","line":617,"loc":{"start":{"line":617,"column":0},"end":{"line":617,"column":88}}},"27":{"name":"parse","line":647,"loc":{"start":{"line":647,"column":0},"end":{"line":647,"column":30}}},"28":{"name":"(anonymous_28)","line":719,"loc":{"start":{"line":719,"column":31},"end":{"line":719,"column":47}}},"29":{"name":"(anonymous_29)","line":729,"loc":{"start":{"line":729,"column":37},"end":{"line":729,"column":48}}},"30":{"name":"(anonymous_30)","line":799,"loc":{"start":{"line":799,"column":18},"end":{"line":799,"column":29}},"skip":true},"31":{"name":"(anonymous_31)","line":820,"loc":{"start":{"line":820,"column":23},"end":{"line":820,"column":34}},"skip":true}},"statementMap":{"1":{"start":{"line":61,"column":0},"end":{"line":65,"column":32}},"2":{"start":{"line":68,"column":0},"end":{"line":68,"column":31}},"3":{"start":{"line":69,"column":0},"end":{"line":69,"column":29}},"4":{"start":{"line":70,"column":0},"end":{"line":72,"column":14}},"5":{"start":{"line":80,"column":0},"end":{"line":92,"column":2}},"6":{"start":{"line":81,"column":4},"end":{"line":89,"column":5}},"7":{"start":{"line":82,"column":8},"end":{"line":88,"column":9}},"8":{"start":{"line":83,"column":12},"end":{"line":83,"column":56}},"9":{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},"10":{"start":{"line":86,"column":16},"end":{"line":86,"column":77}},"11":{"start":{"line":91,"column":4},"end":{"line":91,"column":18}},"12":{"start":{"line":99,"column":0},"end":{"line":113,"column":1}},"13":{"start":{"line":100,"column":4},"end":{"line":112,"column":6}},"14":{"start":{"line":117,"column":0},"end":{"line":118,"column":36}},"15":{"start":{"line":121,"column":0},"end":{"line":121,"column":26}},"16":{"start":{"line":128,"column":0},"end":{"line":152,"column":1}},"17":{"start":{"line":129,"column":4},"end":{"line":151,"column":5}},"18":{"start":{"line":130,"column":8},"end":{"line":130,"column":34}},"19":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"20":{"start":{"line":135,"column":12},"end":{"line":135,"column":28}},"21":{"start":{"line":138,"column":8},"end":{"line":148,"column":9}},"22":{"start":{"line":144,"column":16},"end":{"line":144,"column":31}},"23":{"start":{"line":147,"column":16},"end":{"line":147,"column":56}},"24":{"start":{"line":150,"column":8},"end":{"line":150,"column":36}},"25":{"start":{"line":160,"column":0},"end":{"line":177,"column":1}},"26":{"start":{"line":161,"column":4},"end":{"line":161,"column":34}},"27":{"start":{"line":163,"column":4},"end":{"line":176,"column":5}},"28":{"start":{"line":166,"column":12},"end":{"line":166,"column":53}},"29":{"start":{"line":172,"column":12},"end":{"line":172,"column":34}},"30":{"start":{"line":175,"column":12},"end":{"line":175,"column":24}},"31":{"start":{"line":186,"column":0},"end":{"line":231,"column":1}},"32":{"start":{"line":188,"column":4},"end":{"line":190,"column":5}},"33":{"start":{"line":189,"column":8},"end":{"line":189,"column":38}},"34":{"start":{"line":193,"column":4},"end":{"line":197,"column":5}},"35":{"start":{"line":194,"column":8},"end":{"line":194,"column":38}},"36":{"start":{"line":195,"column":11},"end":{"line":197,"column":5}},"37":{"start":{"line":196,"column":8},"end":{"line":196,"column":28}},"38":{"start":{"line":201,"column":4},"end":{"line":215,"column":5}},"39":{"start":{"line":204,"column":8},"end":{"line":204,"column":89}},"40":{"start":{"line":206,"column":8},"end":{"line":209,"column":9}},"41":{"start":{"line":207,"column":12},"end":{"line":207,"column":30}},"42":{"start":{"line":208,"column":12},"end":{"line":208,"column":62}},"43":{"start":{"line":211,"column":8},"end":{"line":214,"column":9}},"44":{"start":{"line":212,"column":12},"end":{"line":212,"column":38}},"45":{"start":{"line":213,"column":12},"end":{"line":213,"column":68}},"46":{"start":{"line":218,"column":4},"end":{"line":220,"column":5}},"47":{"start":{"line":219,"column":8},"end":{"line":219,"column":28}},"48":{"start":{"line":222,"column":4},"end":{"line":224,"column":5}},"49":{"start":{"line":223,"column":8},"end":{"line":223,"column":49}},"50":{"start":{"line":226,"column":4},"end":{"line":228,"column":5}},"51":{"start":{"line":227,"column":8},"end":{"line":227,"column":33}},"52":{"start":{"line":230,"column":4},"end":{"line":230,"column":18}},"53":{"start":{"line":239,"column":0},"end":{"line":261,"column":1}},"54":{"start":{"line":240,"column":4},"end":{"line":240,"column":34}},"55":{"start":{"line":241,"column":4},"end":{"line":241,"column":27}},"56":{"start":{"line":243,"column":4},"end":{"line":260,"column":5}},"57":{"start":{"line":248,"column":12},"end":{"line":248,"column":28}},"58":{"start":{"line":252,"column":12},"end":{"line":254,"column":13}},"59":{"start":{"line":253,"column":16},"end":{"line":253,"column":29}},"60":{"start":{"line":256,"column":12},"end":{"line":256,"column":24}},"61":{"start":{"line":259,"column":12},"end":{"line":259,"column":24}},"62":{"start":{"line":269,"column":0},"end":{"line":274,"column":1}},"63":{"start":{"line":270,"column":4},"end":{"line":273,"column":6}},"64":{"start":{"line":271,"column":8},"end":{"line":271,"column":65}},"65":{"start":{"line":272,"column":8},"end":{"line":272,"column":52}},"66":{"start":{"line":276,"column":0},"end":{"line":510,"column":2}},"67":{"start":{"line":278,"column":4},"end":{"line":278,"column":50}},"68":{"start":{"line":280,"column":4},"end":{"line":280,"column":52}},"69":{"start":{"line":282,"column":4},"end":{"line":289,"column":7}},"70":{"start":{"line":283,"column":8},"end":{"line":288,"column":10}},"71":{"start":{"line":284,"column":12},"end":{"line":286,"column":13}},"72":{"start":{"line":285,"column":16},"end":{"line":285,"column":34}},"73":{"start":{"line":287,"column":12},"end":{"line":287,"column":35}},"74":{"start":{"line":292,"column":4},"end":{"line":307,"column":7}},"75":{"start":{"line":294,"column":8},"end":{"line":306,"column":10}},"76":{"start":{"line":296,"column":12},"end":{"line":303,"column":13}},"77":{"start":{"line":297,"column":16},"end":{"line":301,"column":17}},"78":{"start":{"line":298,"column":20},"end":{"line":300,"column":21}},"79":{"start":{"line":299,"column":24},"end":{"line":299,"column":90}},"80":{"start":{"line":302,"column":16},"end":{"line":302,"column":33}},"81":{"start":{"line":305,"column":12},"end":{"line":305,"column":71}},"82":{"start":{"line":309,"column":4},"end":{"line":316,"column":7}},"83":{"start":{"line":310,"column":8},"end":{"line":315,"column":10}},"84":{"start":{"line":311,"column":12},"end":{"line":313,"column":13}},"85":{"start":{"line":312,"column":16},"end":{"line":312,"column":35}},"86":{"start":{"line":314,"column":12},"end":{"line":314,"column":50}},"87":{"start":{"line":318,"column":4},"end":{"line":345,"column":7}},"88":{"start":{"line":320,"column":8},"end":{"line":343,"column":10}},"89":{"start":{"line":322,"column":12},"end":{"line":342,"column":13}},"90":{"start":{"line":325,"column":16},"end":{"line":325,"column":44}},"91":{"start":{"line":327,"column":16},"end":{"line":337,"column":17}},"92":{"start":{"line":328,"column":20},"end":{"line":328,"column":50}},"93":{"start":{"line":330,"column":20},"end":{"line":336,"column":21}},"94":{"start":{"line":331,"column":24},"end":{"line":331,"column":63}},"95":{"start":{"line":332,"column":27},"end":{"line":336,"column":21}},"96":{"start":{"line":333,"column":24},"end":{"line":333,"column":100}},"97":{"start":{"line":335,"column":24},"end":{"line":335,"column":65}},"98":{"start":{"line":339,"column":16},"end":{"line":339,"column":28}},"99":{"start":{"line":341,"column":16},"end":{"line":341,"column":64}},"100":{"start":{"line":352,"column":4},"end":{"line":357,"column":6}},"101":{"start":{"line":353,"column":8},"end":{"line":353,"column":36}},"102":{"start":{"line":354,"column":8},"end":{"line":354,"column":20}},"103":{"start":{"line":355,"column":8},"end":{"line":355,"column":42}},"104":{"start":{"line":356,"column":8},"end":{"line":356,"column":65}},"105":{"start":{"line":366,"column":4},"end":{"line":446,"column":6}},"106":{"start":{"line":367,"column":8},"end":{"line":370,"column":26}},"107":{"start":{"line":371,"column":8},"end":{"line":371,"column":29}},"108":{"start":{"line":372,"column":8},"end":{"line":372,"column":20}},"109":{"start":{"line":373,"column":8},"end":{"line":443,"column":9}},"110":{"start":{"line":375,"column":12},"end":{"line":387,"column":13}},"111":{"start":{"line":376,"column":16},"end":{"line":376,"column":38}},"112":{"start":{"line":378,"column":16},"end":{"line":383,"column":17}},"113":{"start":{"line":379,"column":20},"end":{"line":381,"column":21}},"114":{"start":{"line":380,"column":24},"end":{"line":380,"column":133}},"115":{"start":{"line":382,"column":20},"end":{"line":382,"column":26}},"116":{"start":{"line":386,"column":16},"end":{"line":386,"column":30}},"117":{"start":{"line":389,"column":12},"end":{"line":393,"column":25}},"118":{"start":{"line":395,"column":12},"end":{"line":406,"column":13}},"119":{"start":{"line":396,"column":16},"end":{"line":402,"column":17}},"120":{"start":{"line":397,"column":20},"end":{"line":397,"column":50}},"121":{"start":{"line":398,"column":20},"end":{"line":398,"column":43}},"122":{"start":{"line":400,"column":20},"end":{"line":400,"column":46}},"123":{"start":{"line":401,"column":20},"end":{"line":401,"column":61}},"124":{"start":{"line":404,"column":16},"end":{"line":404,"column":43}},"125":{"start":{"line":405,"column":16},"end":{"line":405,"column":25}},"126":{"start":{"line":408,"column":12},"end":{"line":420,"column":13}},"127":{"start":{"line":409,"column":16},"end":{"line":409,"column":36}},"128":{"start":{"line":410,"column":16},"end":{"line":410,"column":39}},"129":{"start":{"line":412,"column":16},"end":{"line":415,"column":17}},"130":{"start":{"line":413,"column":20},"end":{"line":413,"column":42}},"131":{"start":{"line":414,"column":20},"end":{"line":414,"column":45}},"132":{"start":{"line":417,"column":16},"end":{"line":419,"column":17}},"133":{"start":{"line":418,"column":20},"end":{"line":418,"column":52}},"134":{"start":{"line":423,"column":12},"end":{"line":423,"column":65}},"135":{"start":{"line":424,"column":12},"end":{"line":438,"column":13}},"136":{"start":{"line":434,"column":16},"end":{"line":434,"column":69}},"137":{"start":{"line":435,"column":16},"end":{"line":435,"column":31}},"138":{"start":{"line":437,"column":16},"end":{"line":437,"column":32}},"139":{"start":{"line":440,"column":12},"end":{"line":440,"column":119}},"140":{"start":{"line":441,"column":12},"end":{"line":441,"column":48}},"141":{"start":{"line":442,"column":12},"end":{"line":442,"column":68}},"142":{"start":{"line":445,"column":8},"end":{"line":445,"column":87}},"143":{"start":{"line":455,"column":4},"end":{"line":462,"column":6}},"144":{"start":{"line":456,"column":8},"end":{"line":456,"column":47}},"145":{"start":{"line":457,"column":8},"end":{"line":457,"column":43}},"146":{"start":{"line":458,"column":8},"end":{"line":458,"column":24}},"147":{"start":{"line":459,"column":8},"end":{"line":459,"column":34}},"148":{"start":{"line":460,"column":8},"end":{"line":460,"column":36}},"149":{"start":{"line":461,"column":8},"end":{"line":461,"column":18}},"150":{"start":{"line":470,"column":4},"end":{"line":491,"column":6}},"151":{"start":{"line":471,"column":8},"end":{"line":471,"column":41}},"152":{"start":{"line":473,"column":8},"end":{"line":484,"column":9}},"153":{"start":{"line":474,"column":12},"end":{"line":474,"column":27}},"154":{"start":{"line":476,"column":12},"end":{"line":481,"column":13}},"155":{"start":{"line":477,"column":16},"end":{"line":480,"column":17}},"156":{"start":{"line":478,"column":20},"end":{"line":478,"column":90}},"157":{"start":{"line":479,"column":20},"end":{"line":479,"column":35}},"158":{"start":{"line":483,"column":12},"end":{"line":483,"column":29}},"159":{"start":{"line":486,"column":8},"end":{"line":488,"column":9}},"160":{"start":{"line":487,"column":12},"end":{"line":487,"column":68}},"161":{"start":{"line":490,"column":8},"end":{"line":490,"column":40}},"162":{"start":{"line":500,"column":4},"end":{"line":509,"column":7}},"163":{"start":{"line":501,"column":8},"end":{"line":508,"column":10}},"164":{"start":{"line":502,"column":12},"end":{"line":502,"column":57}},"165":{"start":{"line":503,"column":12},"end":{"line":505,"column":13}},"166":{"start":{"line":504,"column":16},"end":{"line":504,"column":47}},"167":{"start":{"line":507,"column":12},"end":{"line":507,"column":26}},"168":{"start":{"line":524,"column":0},"end":{"line":598,"column":1}},"169":{"start":{"line":525,"column":4},"end":{"line":528,"column":51}},"170":{"start":{"line":530,"column":4},"end":{"line":530,"column":22}},"171":{"start":{"line":531,"column":4},"end":{"line":533,"column":5}},"172":{"start":{"line":532,"column":8},"end":{"line":532,"column":30}},"173":{"start":{"line":535,"column":4},"end":{"line":535,"column":21}},"174":{"start":{"line":538,"column":4},"end":{"line":538,"column":34}},"175":{"start":{"line":540,"column":4},"end":{"line":545,"column":6}},"176":{"start":{"line":547,"column":4},"end":{"line":547,"column":17}},"177":{"start":{"line":550,"column":4},"end":{"line":550,"column":26}},"178":{"start":{"line":551,"column":4},"end":{"line":551,"column":22}},"179":{"start":{"line":553,"column":4},"end":{"line":553,"column":72}},"180":{"start":{"line":554,"column":4},"end":{"line":554,"column":38}},"181":{"start":{"line":556,"column":4},"end":{"line":556,"column":66}},"182":{"start":{"line":557,"column":4},"end":{"line":557,"column":39}},"183":{"start":{"line":559,"column":4},"end":{"line":559,"column":76}},"184":{"start":{"line":561,"column":4},"end":{"line":566,"column":5}},"185":{"start":{"line":562,"column":8},"end":{"line":565,"column":10}},"186":{"start":{"line":563,"column":12},"end":{"line":563,"column":85}},"187":{"start":{"line":564,"column":12},"end":{"line":564,"column":41}},"188":{"start":{"line":568,"column":4},"end":{"line":568,"column":79}},"189":{"start":{"line":570,"column":4},"end":{"line":570,"column":93}},"190":{"start":{"line":573,"column":4},"end":{"line":577,"column":5}},"191":{"start":{"line":574,"column":8},"end":{"line":574,"column":62}},"192":{"start":{"line":575,"column":8},"end":{"line":575,"column":57}},"193":{"start":{"line":576,"column":8},"end":{"line":576,"column":95}},"194":{"start":{"line":579,"column":4},"end":{"line":596,"column":5}},"195":{"start":{"line":580,"column":8},"end":{"line":580,"column":60}},"196":{"start":{"line":581,"column":8},"end":{"line":583,"column":9}},"197":{"start":{"line":582,"column":12},"end":{"line":582,"column":49}},"198":{"start":{"line":586,"column":8},"end":{"line":586,"column":30}},"199":{"start":{"line":588,"column":8},"end":{"line":590,"column":9}},"200":{"start":{"line":589,"column":12},"end":{"line":589,"column":45}},"201":{"start":{"line":591,"column":8},"end":{"line":593,"column":9}},"202":{"start":{"line":592,"column":12},"end":{"line":592,"column":41}},"203":{"start":{"line":595,"column":8},"end":{"line":595,"column":16}},"204":{"start":{"line":597,"column":4},"end":{"line":597,"column":18}},"205":{"start":{"line":617,"column":0},"end":{"line":637,"column":1}},"206":{"start":{"line":618,"column":4},"end":{"line":621,"column":6}},"207":{"start":{"line":623,"column":4},"end":{"line":627,"column":5}},"208":{"start":{"line":624,"column":8},"end":{"line":624,"column":30}},"209":{"start":{"line":625,"column":8},"end":{"line":625,"column":26}},"210":{"start":{"line":626,"column":8},"end":{"line":626,"column":37}},"211":{"start":{"line":629,"column":4},"end":{"line":634,"column":5}},"212":{"start":{"line":630,"column":8},"end":{"line":633,"column":10}},"213":{"start":{"line":636,"column":4},"end":{"line":636,"column":19}},"214":{"start":{"line":647,"column":0},"end":{"line":785,"column":1}},"215":{"start":{"line":648,"column":4},"end":{"line":657,"column":10}},"216":{"start":{"line":659,"column":4},"end":{"line":659,"column":21}},"217":{"start":{"line":661,"column":4},"end":{"line":663,"column":5}},"218":{"start":{"line":662,"column":8},"end":{"line":662,"column":30}},"219":{"start":{"line":665,"column":4},"end":{"line":665,"column":17}},"220":{"start":{"line":666,"column":4},"end":{"line":666,"column":30}},"221":{"start":{"line":668,"column":4},"end":{"line":754,"column":5}},"222":{"start":{"line":669,"column":8},"end":{"line":669,"column":76}},"223":{"start":{"line":670,"column":8},"end":{"line":670,"column":70}},"224":{"start":{"line":671,"column":8},"end":{"line":671,"column":100}},"225":{"start":{"line":673,"column":8},"end":{"line":675,"column":9}},"226":{"start":{"line":674,"column":12},"end":{"line":674,"column":52}},"227":{"start":{"line":677,"column":8},"end":{"line":680,"column":9}},"228":{"start":{"line":678,"column":12},"end":{"line":678,"column":30}},"229":{"start":{"line":679,"column":12},"end":{"line":679,"column":55}},"230":{"start":{"line":681,"column":8},"end":{"line":684,"column":9}},"231":{"start":{"line":682,"column":12},"end":{"line":682,"column":33}},"232":{"start":{"line":683,"column":12},"end":{"line":683,"column":32}},"233":{"start":{"line":685,"column":8},"end":{"line":687,"column":9}},"234":{"start":{"line":686,"column":12},"end":{"line":686,"column":30}},"235":{"start":{"line":688,"column":8},"end":{"line":692,"column":9}},"236":{"start":{"line":689,"column":12},"end":{"line":689,"column":31}},"237":{"start":{"line":690,"column":12},"end":{"line":690,"column":32}},"238":{"start":{"line":691,"column":12},"end":{"line":691,"column":38}},"239":{"start":{"line":694,"column":8},"end":{"line":694,"column":97}},"240":{"start":{"line":696,"column":8},"end":{"line":706,"column":9}},"241":{"start":{"line":697,"column":12},"end":{"line":697,"column":34}},"242":{"start":{"line":700,"column":12},"end":{"line":703,"column":13}},"243":{"start":{"line":701,"column":16},"end":{"line":701,"column":45}},"244":{"start":{"line":702,"column":16},"end":{"line":702,"column":38}},"245":{"start":{"line":705,"column":12},"end":{"line":705,"column":47}},"246":{"start":{"line":709,"column":8},"end":{"line":716,"column":9}},"247":{"start":{"line":710,"column":12},"end":{"line":710,"column":66}},"248":{"start":{"line":711,"column":12},"end":{"line":711,"column":61}},"249":{"start":{"line":712,"column":12},"end":{"line":712,"column":99}},"250":{"start":{"line":713,"column":12},"end":{"line":715,"column":13}},"251":{"start":{"line":714,"column":16},"end":{"line":714,"column":63}},"252":{"start":{"line":719,"column":8},"end":{"line":726,"column":10}},"253":{"start":{"line":720,"column":12},"end":{"line":722,"column":13}},"254":{"start":{"line":721,"column":16},"end":{"line":721,"column":49}},"255":{"start":{"line":723,"column":12},"end":{"line":725,"column":13}},"256":{"start":{"line":724,"column":16},"end":{"line":724,"column":34}},"257":{"start":{"line":728,"column":8},"end":{"line":737,"column":9}},"258":{"start":{"line":729,"column":12},"end":{"line":736,"column":14}},"259":{"start":{"line":730,"column":16},"end":{"line":730,"column":89}},"260":{"start":{"line":731,"column":16},"end":{"line":731,"column":45}},"261":{"start":{"line":733,"column":16},"end":{"line":735,"column":17}},"262":{"start":{"line":734,"column":20},"end":{"line":734,"column":58}},"263":{"start":{"line":739,"column":8},"end":{"line":741,"column":9}},"264":{"start":{"line":740,"column":12},"end":{"line":740,"column":39}},"265":{"start":{"line":743,"column":8},"end":{"line":745,"column":9}},"266":{"start":{"line":744,"column":12},"end":{"line":744,"column":42}},"267":{"start":{"line":747,"column":8},"end":{"line":753,"column":9}},"268":{"start":{"line":749,"column":12},"end":{"line":752,"column":14}},"269":{"start":{"line":756,"column":4},"end":{"line":756,"column":46}},"270":{"start":{"line":757,"column":4},"end":{"line":757,"column":62}},"271":{"start":{"line":759,"column":4},"end":{"line":761,"column":5}},"272":{"start":{"line":760,"column":8},"end":{"line":760,"column":42}},"273":{"start":{"line":763,"column":4},"end":{"line":765,"column":5}},"274":{"start":{"line":764,"column":8},"end":{"line":764,"column":38}},"275":{"start":{"line":774,"column":4},"end":{"line":777,"column":5}},"276":{"start":{"line":775,"column":8},"end":{"line":775,"column":93}},"277":{"start":{"line":776,"column":8},"end":{"line":776,"column":77}},"278":{"start":{"line":779,"column":4},"end":{"line":782,"column":5}},"279":{"start":{"line":780,"column":8},"end":{"line":780,"column":96}},"280":{"start":{"line":781,"column":8},"end":{"line":781,"column":74}},"281":{"start":{"line":784,"column":4},"end":{"line":784,"column":19}},"282":{"start":{"line":791,"column":0},"end":{"line":791,"column":52}},"283":{"start":{"line":793,"column":0},"end":{"line":793,"column":28}},"284":{"start":{"line":795,"column":0},"end":{"line":795,"column":22}},"285":{"start":{"line":799,"column":0},"end":{"line":817,"column":5},"skip":true},"286":{"start":{"line":800,"column":4},"end":{"line":800,"column":25},"skip":true},"287":{"start":{"line":802,"column":4},"end":{"line":804,"column":5},"skip":true},"288":{"start":{"line":803,"column":8},"end":{"line":803,"column":36},"skip":true},"289":{"start":{"line":806,"column":4},"end":{"line":810,"column":5},"skip":true},"290":{"start":{"line":807,"column":8},"end":{"line":809,"column":9},"skip":true},"291":{"start":{"line":808,"column":12},"end":{"line":808,"column":45},"skip":true},"292":{"start":{"line":812,"column":4},"end":{"line":814,"column":5},"skip":true},"293":{"start":{"line":813,"column":8},"end":{"line":813,"column":29},"skip":true},"294":{"start":{"line":816,"column":4},"end":{"line":816,"column":17},"skip":true},"295":{"start":{"line":820,"column":0},"end":{"line":840,"column":5},"skip":true},"296":{"start":{"line":821,"column":4},"end":{"line":821,"column":52},"skip":true},"297":{"start":{"line":822,"column":4},"end":{"line":823,"column":18},"skip":true},"298":{"start":{"line":825,"column":4},"end":{"line":827,"column":5},"skip":true},"299":{"start":{"line":826,"column":8},"end":{"line":826,"column":35},"skip":true},"300":{"start":{"line":829,"column":4},"end":{"line":833,"column":5},"skip":true},"301":{"start":{"line":830,"column":8},"end":{"line":832,"column":9},"skip":true},"302":{"start":{"line":831,"column":12},"end":{"line":831,"column":43},"skip":true},"303":{"start":{"line":835,"column":4},"end":{"line":837,"column":5},"skip":true},"304":{"start":{"line":836,"column":8},"end":{"line":836,"column":28},"skip":true},"305":{"start":{"line":839,"column":4},"end":{"line":839,"column":16},"skip":true}},"branchMap":{"1":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":13},"end":{"line":80,"column":26}},{"start":{"line":80,"column":30},"end":{"line":92,"column":1}}]},"2":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":82,"column":8}},{"start":{"line":82,"column":8},"end":{"line":82,"column":8}}]},"3":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":12},"end":{"line":82,"column":40}},{"start":{"line":82,"column":44},"end":{"line":82,"column":83}}]},"4":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":129,"column":4}},{"start":{"line":129,"column":4},"end":{"line":129,"column":4}}]},"5":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":8},"end":{"line":134,"column":8}},{"start":{"line":134,"column":8},"end":{"line":134,"column":8}}]},"6":{"line":138,"type":"switch","locations":[{"start":{"line":139,"column":12},"end":{"line":139,"column":19}},{"start":{"line":140,"column":12},"end":{"line":140,"column":19}},{"start":{"line":141,"column":12},"end":{"line":141,"column":19}},{"start":{"line":142,"column":12},"end":{"line":142,"column":19}},{"start":{"line":143,"column":12},"end":{"line":144,"column":31}},{"start":{"line":146,"column":12},"end":{"line":147,"column":56}}]},"7":{"line":163,"type":"switch","locations":[{"start":{"line":164,"column":8},"end":{"line":164,"column":42}},{"start":{"line":165,"column":8},"end":{"line":166,"column":53}},{"start":{"line":168,"column":8},"end":{"line":168,"column":33}},{"start":{"line":169,"column":8},"end":{"line":169,"column":38}},{"start":{"line":170,"column":8},"end":{"line":170,"column":40}},{"start":{"line":171,"column":8},"end":{"line":172,"column":34}},{"start":{"line":174,"column":8},"end":{"line":175,"column":24}}]},"8":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":4},"end":{"line":188,"column":4}},{"start":{"line":188,"column":4},"end":{"line":188,"column":4}}]},"9":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"10":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":11},"end":{"line":195,"column":11}},{"start":{"line":195,"column":11},"end":{"line":195,"column":11}}]},"11":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":4},"end":{"line":201,"column":4}},{"start":{"line":201,"column":4},"end":{"line":201,"column":4}}]},"12":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":8},"end":{"line":206,"column":8}},{"start":{"line":206,"column":8},"end":{"line":206,"column":8}}]},"13":{"line":208,"type":"cond-expr","locations":[{"start":{"line":208,"column":55},"end":{"line":208,"column":56}},{"start":{"line":208,"column":59},"end":{"line":208,"column":60}}]},"14":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":8},"end":{"line":211,"column":8}},{"start":{"line":211,"column":8},"end":{"line":211,"column":8}}]},"15":{"line":213,"type":"cond-expr","locations":[{"start":{"line":213,"column":61},"end":{"line":213,"column":62}},{"start":{"line":213,"column":65},"end":{"line":213,"column":66}}]},"16":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":4},"end":{"line":218,"column":4}},{"start":{"line":218,"column":4},"end":{"line":218,"column":4}}]},"17":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":8},"end":{"line":218,"column":33}},{"start":{"line":218,"column":37},"end":{"line":218,"column":63}}]},"18":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":222,"column":4}},{"start":{"line":222,"column":4},"end":{"line":222,"column":4}}]},"19":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":4},"end":{"line":226,"column":4}},{"start":{"line":226,"column":4},"end":{"line":226,"column":4}}]},"20":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":8},"end":{"line":226,"column":44}},{"start":{"line":226,"column":48},"end":{"line":226,"column":65}}]},"21":{"line":243,"type":"switch","locations":[{"start":{"line":244,"column":8},"end":{"line":244,"column":24}},{"start":{"line":245,"column":8},"end":{"line":245,"column":24}},{"start":{"line":246,"column":8},"end":{"line":246,"column":28}},{"start":{"line":247,"column":8},"end":{"line":248,"column":28}},{"start":{"line":251,"column":8},"end":{"line":256,"column":24}},{"start":{"line":258,"column":8},"end":{"line":259,"column":24}}]},"22":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":12},"end":{"line":252,"column":12}},{"start":{"line":252,"column":12},"end":{"line":252,"column":12}}]},"23":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":16},"end":{"line":252,"column":37}},{"start":{"line":252,"column":41},"end":{"line":252,"column":59}},{"start":{"line":252,"column":63},"end":{"line":252,"column":99}}]},"24":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":12},"end":{"line":284,"column":12}},{"start":{"line":284,"column":12},"end":{"line":284,"column":12}}]},"25":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":12},"end":{"line":296,"column":12}},{"start":{"line":296,"column":12},"end":{"line":296,"column":12}}]},"26":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":16},"end":{"line":296,"column":63}},{"start":{"line":296,"column":67},"end":{"line":296,"column":96}}]},"27":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":20},"end":{"line":298,"column":20}},{"start":{"line":298,"column":20},"end":{"line":298,"column":20}}]},"28":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":12},"end":{"line":311,"column":12}},{"start":{"line":311,"column":12},"end":{"line":311,"column":12}}]},"29":{"line":311,"type":"binary-expr","locations":[{"start":{"line":311,"column":16},"end":{"line":311,"column":48}},{"start":{"line":311,"column":52},"end":{"line":311,"column":81}}]},"30":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":12},"end":{"line":322,"column":12}},{"start":{"line":322,"column":12},"end":{"line":322,"column":12}}]},"31":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":16},"end":{"line":322,"column":63}},{"start":{"line":323,"column":20},"end":{"line":323,"column":52}}]},"32":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":20},"end":{"line":330,"column":20}},{"start":{"line":330,"column":20},"end":{"line":330,"column":20}}]},"33":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":27},"end":{"line":332,"column":27}},{"start":{"line":332,"column":27},"end":{"line":332,"column":27}}]},"34":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":12},"end":{"line":375,"column":12}},{"start":{"line":375,"column":12},"end":{"line":375,"column":12}}]},"35":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":16},"end":{"line":378,"column":16}},{"start":{"line":378,"column":16},"end":{"line":378,"column":16}}]},"36":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":20},"end":{"line":379,"column":20}},{"start":{"line":379,"column":20},"end":{"line":379,"column":20}}]},"37":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":12},"end":{"line":395,"column":12}},{"start":{"line":395,"column":12},"end":{"line":395,"column":12}}]},"38":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":16},"end":{"line":395,"column":63}},{"start":{"line":395,"column":67},"end":{"line":395,"column":92}}]},"39":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":16},"end":{"line":396,"column":16}},{"start":{"line":396,"column":16},"end":{"line":396,"column":16}}]},"40":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":12},"end":{"line":408,"column":12}},{"start":{"line":408,"column":12},"end":{"line":408,"column":12}}]},"41":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":16},"end":{"line":412,"column":16}},{"start":{"line":412,"column":16},"end":{"line":412,"column":16}}]},"42":{"line":412,"type":"binary-expr","locations":[{"start":{"line":412,"column":20},"end":{"line":412,"column":29}},{"start":{"line":412,"column":33},"end":{"line":412,"column":55}}]},"43":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":16},"end":{"line":417,"column":16}},{"start":{"line":417,"column":16},"end":{"line":417,"column":16}}]},"44":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":12},"end":{"line":424,"column":12}},{"start":{"line":424,"column":12},"end":{"line":424,"column":12}}]},"45":{"line":424,"type":"binary-expr","locations":[{"start":{"line":424,"column":16},"end":{"line":424,"column":45}},{"start":{"line":425,"column":16},"end":{"line":425,"column":26}},{"start":{"line":426,"column":16},"end":{"line":426,"column":28}},{"start":{"line":427,"column":16},"end":{"line":427,"column":30}},{"start":{"line":428,"column":16},"end":{"line":428,"column":46}},{"start":{"line":429,"column":16},"end":{"line":429,"column":41}},{"start":{"line":430,"column":16},"end":{"line":430,"column":39}},{"start":{"line":431,"column":16},"end":{"line":431,"column":38}},{"start":{"line":432,"column":16},"end":{"line":432,"column":42}}]},"46":{"line":445,"type":"cond-expr","locations":[{"start":{"line":445,"column":49},"end":{"line":445,"column":64}},{"start":{"line":445,"column":67},"end":{"line":445,"column":85}}]},"47":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":8},"end":{"line":473,"column":8}},{"start":{"line":473,"column":8},"end":{"line":473,"column":8}}]},"48":{"line":473,"type":"binary-expr","locations":[{"start":{"line":473,"column":12},"end":{"line":473,"column":24}},{"start":{"line":473,"column":28},"end":{"line":473,"column":45}}]},"49":{"line":476,"type":"if","locations":[{"start":{"line":476,"column":12},"end":{"line":476,"column":12}},{"start":{"line":476,"column":12},"end":{"line":476,"column":12}}]},"50":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":8},"end":{"line":486,"column":8}},{"start":{"line":486,"column":8},"end":{"line":486,"column":8}}]},"51":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":12},"end":{"line":503,"column":12}},{"start":{"line":503,"column":12},"end":{"line":503,"column":12}}]},"52":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":4},"end":{"line":531,"column":4}},{"start":{"line":531,"column":4},"end":{"line":531,"column":4}}]},"53":{"line":531,"type":"binary-expr","locations":[{"start":{"line":531,"column":8},"end":{"line":531,"column":32}},{"start":{"line":531,"column":36},"end":{"line":531,"column":61}}]},"54":{"line":553,"type":"binary-expr","locations":[{"start":{"line":553,"column":19},"end":{"line":553,"column":53}},{"start":{"line":553,"column":58},"end":{"line":553,"column":71}}]},"55":{"line":556,"type":"binary-expr","locations":[{"start":{"line":556,"column":17},"end":{"line":556,"column":49}},{"start":{"line":556,"column":54},"end":{"line":556,"column":65}}]},"56":{"line":559,"type":"binary-expr","locations":[{"start":{"line":559,"column":20},"end":{"line":559,"column":56}},{"start":{"line":559,"column":60},"end":{"line":559,"column":75}}]},"57":{"line":561,"type":"if","locations":[{"start":{"line":561,"column":4},"end":{"line":561,"column":4}},{"start":{"line":561,"column":4},"end":{"line":561,"column":4}}]},"58":{"line":568,"type":"binary-expr","locations":[{"start":{"line":568,"column":21},"end":{"line":568,"column":58}},{"start":{"line":568,"column":62},"end":{"line":568,"column":78}}]},"59":{"line":573,"type":"if","locations":[{"start":{"line":573,"column":4},"end":{"line":573,"column":4}},{"start":{"line":573,"column":4},"end":{"line":573,"column":4}}]},"60":{"line":573,"type":"binary-expr","locations":[{"start":{"line":573,"column":8},"end":{"line":573,"column":28}},{"start":{"line":573,"column":32},"end":{"line":573,"column":72}}]},"61":{"line":576,"type":"binary-expr","locations":[{"start":{"line":576,"column":43},"end":{"line":576,"column":77}},{"start":{"line":576,"column":81},"end":{"line":576,"column":94}}]},"62":{"line":588,"type":"if","locations":[{"start":{"line":588,"column":8},"end":{"line":588,"column":8}},{"start":{"line":588,"column":8},"end":{"line":588,"column":8}}]},"63":{"line":591,"type":"if","locations":[{"start":{"line":591,"column":8},"end":{"line":591,"column":8}},{"start":{"line":591,"column":8},"end":{"line":591,"column":8}}]},"64":{"line":619,"type":"cond-expr","locations":[{"start":{"line":619,"column":22},"end":{"line":619,"column":29}},{"start":{"line":619,"column":32},"end":{"line":619,"column":38}}]},"65":{"line":623,"type":"if","locations":[{"start":{"line":623,"column":4},"end":{"line":623,"column":4}},{"start":{"line":623,"column":4},"end":{"line":623,"column":4}}]},"66":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":4},"end":{"line":629,"column":4}},{"start":{"line":629,"column":4},"end":{"line":629,"column":4}}]},"67":{"line":661,"type":"if","locations":[{"start":{"line":661,"column":4},"end":{"line":661,"column":4}},{"start":{"line":661,"column":4},"end":{"line":661,"column":4}}]},"68":{"line":661,"type":"binary-expr","locations":[{"start":{"line":661,"column":8},"end":{"line":661,"column":32}},{"start":{"line":661,"column":36},"end":{"line":661,"column":61}}]},"69":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":4},"end":{"line":668,"column":4}},{"start":{"line":668,"column":4},"end":{"line":668,"column":4}}]},"70":{"line":669,"type":"binary-expr","locations":[{"start":{"line":669,"column":23},"end":{"line":669,"column":57}},{"start":{"line":669,"column":62},"end":{"line":669,"column":75}}]},"71":{"line":670,"type":"binary-expr","locations":[{"start":{"line":670,"column":21},"end":{"line":670,"column":53}},{"start":{"line":670,"column":58},"end":{"line":670,"column":69}}]},"72":{"line":671,"type":"binary-expr","locations":[{"start":{"line":671,"column":31},"end":{"line":671,"column":73}},{"start":{"line":671,"column":78},"end":{"line":671,"column":99}}]},"73":{"line":673,"type":"if","locations":[{"start":{"line":673,"column":8},"end":{"line":673,"column":8}},{"start":{"line":673,"column":8},"end":{"line":673,"column":8}}]},"74":{"line":673,"type":"binary-expr","locations":[{"start":{"line":673,"column":12},"end":{"line":673,"column":21}},{"start":{"line":673,"column":25},"end":{"line":673,"column":48}},{"start":{"line":673,"column":52},"end":{"line":673,"column":80}}]},"75":{"line":677,"type":"if","locations":[{"start":{"line":677,"column":8},"end":{"line":677,"column":8}},{"start":{"line":677,"column":8},"end":{"line":677,"column":8}}]},"76":{"line":677,"type":"binary-expr","locations":[{"start":{"line":677,"column":12},"end":{"line":677,"column":47}},{"start":{"line":677,"column":51},"end":{"line":677,"column":65}}]},"77":{"line":681,"type":"if","locations":[{"start":{"line":681,"column":8},"end":{"line":681,"column":8}},{"start":{"line":681,"column":8},"end":{"line":681,"column":8}}]},"78":{"line":681,"type":"binary-expr","locations":[{"start":{"line":681,"column":12},"end":{"line":681,"column":48}},{"start":{"line":681,"column":52},"end":{"line":681,"column":67}}]},"79":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":8},"end":{"line":685,"column":8}},{"start":{"line":685,"column":8},"end":{"line":685,"column":8}}]},"80":{"line":685,"type":"binary-expr","locations":[{"start":{"line":685,"column":12},"end":{"line":685,"column":49}},{"start":{"line":685,"column":53},"end":{"line":685,"column":69}}]},"81":{"line":688,"type":"if","locations":[{"start":{"line":688,"column":8},"end":{"line":688,"column":8}},{"start":{"line":688,"column":8},"end":{"line":688,"column":8}}]},"82":{"line":696,"type":"if","locations":[{"start":{"line":696,"column":8},"end":{"line":696,"column":8}},{"start":{"line":696,"column":8},"end":{"line":696,"column":8}}]},"83":{"line":700,"type":"if","locations":[{"start":{"line":700,"column":12},"end":{"line":700,"column":12}},{"start":{"line":700,"column":12},"end":{"line":700,"column":12}}]},"84":{"line":709,"type":"if","locations":[{"start":{"line":709,"column":8},"end":{"line":709,"column":8}},{"start":{"line":709,"column":8},"end":{"line":709,"column":8}}]},"85":{"line":709,"type":"binary-expr","locations":[{"start":{"line":709,"column":12},"end":{"line":709,"column":32}},{"start":{"line":709,"column":36},"end":{"line":709,"column":76}}]},"86":{"line":712,"type":"binary-expr","locations":[{"start":{"line":712,"column":47},"end":{"line":712,"column":81}},{"start":{"line":712,"column":85},"end":{"line":712,"column":98}}]},"87":{"line":713,"type":"if","locations":[{"start":{"line":713,"column":12},"end":{"line":713,"column":12}},{"start":{"line":713,"column":12},"end":{"line":713,"column":12}}]},"88":{"line":720,"type":"if","locations":[{"start":{"line":720,"column":12},"end":{"line":720,"column":12}},{"start":{"line":720,"column":12},"end":{"line":720,"column":12}}]},"89":{"line":723,"type":"if","locations":[{"start":{"line":723,"column":12},"end":{"line":723,"column":12}},{"start":{"line":723,"column":12},"end":{"line":723,"column":12}}]},"90":{"line":728,"type":"if","locations":[{"start":{"line":728,"column":8},"end":{"line":728,"column":8}},{"start":{"line":728,"column":8},"end":{"line":728,"column":8}}]},"91":{"line":728,"type":"binary-expr","locations":[{"start":{"line":728,"column":12},"end":{"line":728,"column":31}},{"start":{"line":728,"column":35},"end":{"line":728,"column":48}}]},"92":{"line":733,"type":"if","locations":[{"start":{"line":733,"column":16},"end":{"line":733,"column":16}},{"start":{"line":733,"column":16},"end":{"line":733,"column":16}}]},"93":{"line":739,"type":"if","locations":[{"start":{"line":739,"column":8},"end":{"line":739,"column":8}},{"start":{"line":739,"column":8},"end":{"line":739,"column":8}}]},"94":{"line":743,"type":"if","locations":[{"start":{"line":743,"column":8},"end":{"line":743,"column":8}},{"start":{"line":743,"column":8},"end":{"line":743,"column":8}}]},"95":{"line":747,"type":"if","locations":[{"start":{"line":747,"column":8},"end":{"line":747,"column":8}},{"start":{"line":747,"column":8},"end":{"line":747,"column":8}}]},"96":{"line":757,"type":"cond-expr","locations":[{"start":{"line":757,"column":42},"end":{"line":757,"column":50}},{"start":{"line":757,"column":53},"end":{"line":757,"column":61}}]},"97":{"line":759,"type":"if","locations":[{"start":{"line":759,"column":4},"end":{"line":759,"column":4}},{"start":{"line":759,"column":4},"end":{"line":759,"column":4}}]},"98":{"line":759,"type":"binary-expr","locations":[{"start":{"line":759,"column":8},"end":{"line":759,"column":21}},{"start":{"line":759,"column":25},"end":{"line":759,"column":44}}]},"99":{"line":763,"type":"if","locations":[{"start":{"line":763,"column":4},"end":{"line":763,"column":4}},{"start":{"line":763,"column":4},"end":{"line":763,"column":4}}]},"100":{"line":774,"type":"if","locations":[{"start":{"line":774,"column":4},"end":{"line":774,"column":4}},{"start":{"line":774,"column":4},"end":{"line":774,"column":4}}]},"101":{"line":775,"type":"cond-expr","locations":[{"start":{"line":775,"column":49},"end":{"line":775,"column":73}},{"start":{"line":775,"column":76},"end":{"line":775,"column":92}}]},"102":{"line":776,"type":"cond-expr","locations":[{"start":{"line":776,"column":39},"end":{"line":776,"column":57}},{"start":{"line":776,"column":60},"end":{"line":776,"column":76}}]},"103":{"line":779,"type":"if","locations":[{"start":{"line":779,"column":4},"end":{"line":779,"column":4}},{"start":{"line":779,"column":4},"end":{"line":779,"column":4}}]},"104":{"line":780,"type":"cond-expr","locations":[{"start":{"line":780,"column":50},"end":{"line":780,"column":75}},{"start":{"line":780,"column":78},"end":{"line":780,"column":95}}]},"105":{"line":781,"type":"cond-expr","locations":[{"start":{"line":781,"column":38},"end":{"line":781,"column":55}},{"start":{"line":781,"column":58},"end":{"line":781,"column":73}}]},"106":{"line":802,"type":"if","locations":[{"start":{"line":802,"column":4},"end":{"line":802,"column":4},"skip":true},{"start":{"line":802,"column":4},"end":{"line":802,"column":4},"skip":true}]},"107":{"line":807,"type":"if","locations":[{"start":{"line":807,"column":8},"end":{"line":807,"column":8},"skip":true},{"start":{"line":807,"column":8},"end":{"line":807,"column":8},"skip":true}]},"108":{"line":812,"type":"if","locations":[{"start":{"line":812,"column":4},"end":{"line":812,"column":4},"skip":true},{"start":{"line":812,"column":4},"end":{"line":812,"column":4},"skip":true}]},"109":{"line":825,"type":"if","locations":[{"start":{"line":825,"column":4},"end":{"line":825,"column":4},"skip":true},{"start":{"line":825,"column":4},"end":{"line":825,"column":4},"skip":true}]},"110":{"line":830,"type":"if","locations":[{"start":{"line":830,"column":8},"end":{"line":830,"column":8},"skip":true},{"start":{"line":830,"column":8},"end":{"line":830,"column":8},"skip":true}]},"111":{"line":835,"type":"if","locations":[{"start":{"line":835,"column":4},"end":{"line":835,"column":4},"skip":true},{"start":{"line":835,"column":4},"end":{"line":835,"column":4},"skip":true}]}},"code":["/**"," * @fileoverview Main Espree file that converts Acorn into Esprima output."," *"," * This file contains code from the following MIT-licensed projects:"," * 1. Acorn"," * 2. Babylon"," * 3. Babel-ESLint"," *"," * This file also contains code from Esprima, which is BSD licensed."," *"," * Acorn is Copyright 2012-2015 Acorn Contributors (https://github.com/marijnh/acorn/blob/master/AUTHORS)"," * Babylon is Copyright 2014-2015 various contributors (https://github.com/babel/babel/blob/master/packages/babylon/AUTHORS)"," * Babel-ESLint is Copyright 2014-2015 Sebastian McKenzie <sebmck@gmail.com>"," *"," * Redistribution and use in source and binary forms, with or without"," * modification, are permitted provided that the following conditions are met:"," *"," * * Redistributions of source code must retain the above copyright"," *   notice, this list of conditions and the following disclaimer."," * * Redistributions in binary form must reproduce the above copyright"," *   notice, this list of conditions and the following disclaimer in the"," *   documentation and/or other materials provided with the distribution."," *"," * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\""," * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE"," * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE"," * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY"," * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES"," * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;"," * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"," * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT"," * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF"," * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."," *"," * Esprima is Copyright (c) jQuery Foundation, Inc. and Contributors, All Rights Reserved."," *"," * Redistribution and use in source and binary forms, with or without"," * modification, are permitted provided that the following conditions are met:"," *"," *   * Redistributions of source code must retain the above copyright"," *     notice, this list of conditions and the following disclaimer."," *   * Redistributions in binary form must reproduce the above copyright"," *     notice, this list of conditions and the following disclaimer in the"," *     documentation and/or other materials provided with the distribution."," *"," * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\""," * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE"," * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE"," * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY"," * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES"," * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;"," * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"," * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT"," * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF"," * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."," */","/* eslint no-undefined:0, no-use-before-define: 0 */","","\"use strict\";","","var astNodeTypes = require(\"./lib/ast-node-types\"),","    commentAttachment = require(\"./lib/comment-attachment\"),","    TokenTranslator = require(\"./lib/token-translator\"),","    acornJSX = require(\"acorn-jsx/inject\"),","    rawAcorn = require(\"acorn\");","","","var acorn = acornJSX(rawAcorn);","var DEFAULT_ECMA_VERSION = 5;","var lookahead,","    extra,","    lastToken;","","/**"," * Object.assign polyfill for Node < 4"," * @param {Object} target The target object"," * @param {...Object} sources Sources for the object"," * @returns {Object} `target` after being mutated"," */","var assign = Object.assign || function assign(target) {","    for (var argIndex = 1; argIndex < arguments.length; argIndex++) {","        if (arguments[argIndex] !== null && typeof arguments[argIndex] === \"object\") {","            var keys = Object.keys(arguments[argIndex]);","","            for (var keyIndex = 0; keyIndex < keys.length; keyIndex++) {","                target[keys[keyIndex]] = arguments[argIndex][keys[keyIndex]];","            }","        }","    }","","    return target;","};","","/**"," * Resets the extra object to its default."," * @returns {void}"," * @private"," */","function resetExtra() {","    extra = {","        tokens: null,","        range: false,","        loc: false,","        comment: false,","        comments: [],","        tolerant: false,","        errors: [],","        strict: false,","        ecmaFeatures: {},","        ecmaVersion: DEFAULT_ECMA_VERSION,","        isModule: false","    };","}","","","","var tt = acorn.tokTypes,","    getLineInfo = acorn.getLineInfo;","","// custom type for JSX attribute values","tt.jsxAttrValueToken = {};","","/**"," * Normalize ECMAScript version from the initial config"," * @param  {number} ecmaVersion ECMAScript version from the initial config"," * @returns {number} normalized ECMAScript version"," */","function normalizeEcmaVersion(ecmaVersion) {","    if (typeof ecmaVersion === \"number\") {","        var version = ecmaVersion;","","        // Calculate ECMAScript edition number from official year version starting with","        // ES2015, which corresponds with ES6 (or a difference of 2009).","        if (version >= 2015) {","            version -= 2009;","        }","","        switch (version) {","            case 3:","            case 5:","            case 6:","            case 7:","            case 8:","                return version;","","            default:","                throw new Error(\"Invalid ecmaVersion.\");","        }","    } else {","        return DEFAULT_ECMA_VERSION;","    }","}","","/**"," * Determines if a node is valid given the set of ecmaFeatures."," * @param {ASTNode} node The node to check."," * @returns {boolean} True if the node is allowed, false if not."," * @private"," */","function isValidNode(node) {","    var ecma = extra.ecmaFeatures;","","    switch (node.type) {","        case \"ExperimentalSpreadProperty\":","        case \"ExperimentalRestProperty\":","            return ecma.experimentalObjectRestSpread;","","        case \"ImportDeclaration\":","        case \"ExportNamedDeclaration\":","        case \"ExportDefaultDeclaration\":","        case \"ExportAllDeclaration\":","            return extra.isModule;","","        default:","            return true;","    }","}","","/**"," * Performs last-minute Esprima-specific compatibility checks and fixes."," * @param {ASTNode} result The node to check."," * @returns {ASTNode} The finished node."," * @private"," * @this acorn.Parser"," */","function esprimaFinishNode(result) {","    // ensure that parsed node was allowed through ecmaFeatures","    if (!isValidNode(result)) {","        this.unexpected(result.start);","    }","","    // https://github.com/marijnh/acorn/issues/323","    if (result.type === \"TryStatement\") {","        delete result.guardedHandlers;","    } else if (result.type === \"CatchClause\") {","        delete result.guard;","    }","","    // Acorn doesn't count the opening and closing backticks as part of templates","    // so we have to adjust ranges/locations appropriately.","    if (result.type === \"TemplateElement\") {","","        // additional adjustment needed if ${ is the last token","        var terminalDollarBraceL = this.input.slice(result.end, result.end + 2) === \"${\";","","        if (result.range) {","            result.range[0]--;","            result.range[1] += (terminalDollarBraceL ? 2 : 1);","        }","","        if (result.loc) {","            result.loc.start.column--;","            result.loc.end.column += (terminalDollarBraceL ? 2 : 1);","        }","    }","","    // Acorn uses undefined instead of null, which affects serialization","    if (result.type === \"Literal\" && result.value === undefined) {","        result.value = null;","    }","","    if (extra.attachComment) {","        commentAttachment.processComment(result);","    }","","    if (result.type.indexOf(\"Function\") > -1 && !result.generator) {","        result.generator = false;","    }","","    return result;","}","","/**"," * Determines if a token is valid given the set of ecmaFeatures."," * @param {acorn.Parser} parser The parser to check."," * @returns {boolean} True if the token is allowed, false if not."," * @private"," */","function isValidToken(parser) {","    var ecma = extra.ecmaFeatures;","    var type = parser.type;","","    switch (type) {","        case tt.jsxName:","        case tt.jsxText:","        case tt.jsxTagStart:","        case tt.jsxTagEnd:","            return ecma.jsx;","","        // https://github.com/ternjs/acorn/issues/363","        case tt.regexp:","            if (extra.ecmaVersion < 6 && parser.value.flags && parser.value.flags.indexOf(\"y\") > -1) {","                return false;","            }","","            return true;","","        default:","            return true;","    }","}","","/**"," * Injects esprimaFinishNode into the finishNode process."," * @param {Function} finishNode Original finishNode function."," * @returns {ASTNode} The finished node."," * @private"," */","function wrapFinishNode(finishNode) {","    return /** @this acorn.Parser */ function(node, type, pos, loc) {","        var result = finishNode.call(this, node, type, pos, loc);","        return esprimaFinishNode.call(this, result);","    };","}","","acorn.plugins.espree = function(instance) {","","    instance.extend(\"finishNode\", wrapFinishNode);","","    instance.extend(\"finishNodeAt\", wrapFinishNode);","","    instance.extend(\"next\", function(next) {","        return /** @this acorn.Parser */ function() {","            if (!isValidToken(this)) {","                this.unexpected();","            }","            return next.call(this);","        };","    });","","    // needed for experimental object rest/spread","    instance.extend(\"checkLVal\", function(checkLVal) {","","        return /** @this acorn.Parser */ function(expr, isBinding, checkClashes) {","","            if (extra.ecmaFeatures.experimentalObjectRestSpread && expr.type === \"ObjectPattern\") {","                for (var i = 0; i < expr.properties.length; i++) {","                    if (expr.properties[i].type.indexOf(\"Experimental\") === -1) {","                        this.checkLVal(expr.properties[i].value, isBinding, checkClashes);","                    }","                }","                return undefined;","            }","","            return checkLVal.call(this, expr, isBinding, checkClashes);","        };","    });","","    instance.extend(\"parseTopLevel\", function(parseTopLevel) {","        return /** @this acorn.Parser */ function(node) {","            if (extra.ecmaFeatures.impliedStrict && this.options.ecmaVersion >= 5) {","                this.strict = true;","            }","            return parseTopLevel.call(this, node);","        };","    });","","    instance.extend(\"toAssignable\", function(toAssignable) {","","        return /** @this acorn.Parser */ function(node, isBinding) {","","            if (extra.ecmaFeatures.experimentalObjectRestSpread &&","                    node.type === \"ObjectExpression\"","            ) {","                node.type = \"ObjectPattern\";","","                for (var i = 0; i < node.properties.length; i++) {","                    var prop = node.properties[i];","","                    if (prop.type === \"ExperimentalSpreadProperty\") {","                        prop.type = \"ExperimentalRestProperty\";","                    } else if (prop.kind !== \"init\") {","                        this.raise(prop.key.start, \"Object pattern can't contain getter or setter\");","                    } else {","                        this.toAssignable(prop.value, isBinding);","                    }","                }","","                return node;","            } else {","                return toAssignable.call(this, node, isBinding);","            }","        };","","    });","","    /**","     * Method to parse an object rest or object spread.","     * @returns {ASTNode} The node representing object rest or object spread.","     * @this acorn.Parser","     */","    instance.parseObjectRest = function() {","        var node = this.startNode();","        this.next();","        node.argument = this.parseIdent();","        return this.finishNode(node, \"ExperimentalRestProperty\");","    };","","    /**","     * Method to parse an object with object rest or object spread.","     * @param {boolean} isPattern True if the object is a destructuring pattern.","     * @param {Object} refShorthandDefaultPos ?","     * @returns {ASTNode} The node representing object rest or object spread.","     * @this acorn.Parser","     */","    instance.parseObj = function(isPattern, refShorthandDefaultPos) {","        var node = this.startNode(),","            first = true,","            hasRestProperty = false,","            propHash = {};","        node.properties = [];","        this.next();","        while (!this.eat(tt.braceR)) {","","            if (!first) {","                this.expect(tt.comma);","","                if (this.afterTrailingComma(tt.braceR)) {","                    if (hasRestProperty) {","                        this.raise(node.properties[node.properties.length - 1].end, \"Unexpected trailing comma after rest property\");","                    }","                    break;","                }","","            } else {","                first = false;","            }","","            var prop = this.startNode(),","                isGenerator,","                isAsync,","                startPos,","                startLoc;","","            if (extra.ecmaFeatures.experimentalObjectRestSpread && this.type === tt.ellipsis) {","                if (isPattern) {","                    prop = this.parseObjectRest();","                    hasRestProperty = true;","                } else {","                    prop = this.parseSpread();","                    prop.type = \"ExperimentalSpreadProperty\";","                }","","                node.properties.push(prop);","                continue;","            }","","            if (this.options.ecmaVersion >= 6) {","                prop.method = false;","                prop.shorthand = false;","","                if (isPattern || refShorthandDefaultPos) {","                    startPos = this.start;","                    startLoc = this.startLoc;","                }","","                if (!isPattern) {","                    isGenerator = this.eat(tt.star);","                }","            }","","            // grab the property name or \"async\"","            this.parsePropertyName(prop, refShorthandDefaultPos);","            if (this.options.ecmaVersion >= 8 &&","                !isPattern &&","                !isGenerator &&","                !prop.computed &&","                prop.key.type === \"Identifier\" &&","                prop.key.name === \"async\" &&","                this.type !== tt.parenL &&","                this.type !== tt.colon &&","                !this.canInsertSemicolon()","            ) {","                this.parsePropertyName(prop, refShorthandDefaultPos);","                isAsync = true;","            } else {","                isAsync = false;","            }","","            this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refShorthandDefaultPos);","            this.checkPropClash(prop, propHash);","            node.properties.push(this.finishNode(prop, \"Property\"));","        }","","        return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\");","    };","","    /**","     * Overwrites the default raise method to throw Esprima-style errors.","     * @param {int} pos The position of the error.","     * @param {string} message The error message.","     * @throws {SyntaxError} A syntax error.","     * @returns {void}","     */","    instance.raise = instance.raiseRecoverable = function(pos, message) {","        var loc = getLineInfo(this.input, pos);","        var err = new SyntaxError(message);","        err.index = pos;","        err.lineNumber = loc.line;","        err.column = loc.column + 1; // acorn uses 0-based columns","        throw err;","    };","","    /**","     * Overwrites the default unexpected method to throw Esprima-style errors.","     * @param {int} pos The position of the error.","     * @throws {SyntaxError} A syntax error.","     * @returns {void}","     */","    instance.unexpected = function(pos) {","        var message = \"Unexpected token\";","","        if (pos !== null && pos !== undefined) {","            this.pos = pos;","","            if (this.options.locations) {","                while (this.pos < this.lineStart) {","                    this.lineStart = this.input.lastIndexOf(\"\\n\", this.lineStart - 2) + 1;","                    --this.curLine;","                }","            }","","            this.nextToken();","        }","","        if (this.end > this.start) {","            message += \" \" + this.input.slice(this.start, this.end);","        }","","        this.raise(this.start, message);","    };","","    /*","    * Esprima-FB represents JSX strings as tokens called \"JSXText\", but Acorn-JSX","    * uses regular tt.string without any distinction between this and regular JS","    * strings. As such, we intercept an attempt to read a JSX string and set a flag","    * on extra so that when tokens are converted, the next token will be switched","    * to JSXText via onToken.","    */","    instance.extend(\"jsx_readString\", function(jsxReadString) {","        return /** @this acorn.Parser */ function(quote) {","            var result = jsxReadString.call(this, quote);","            if (this.type === tt.string) {","                extra.jsxAttrValueToken = true;","            }","","            return result;","        };","    });","};","","//------------------------------------------------------------------------------","// Tokenizer","//------------------------------------------------------------------------------","","/**"," * Tokenizes the given code."," * @param {string} code The code to tokenize."," * @param {Object} options Options defining how to tokenize."," * @returns {Token[]} An array of tokens."," * @throws {SyntaxError} If the input code is invalid."," * @private"," */","function tokenize(code, options) {","    var toString,","        tokens,","        impliedStrict,","        translator = new TokenTranslator(tt, code);","","    toString = String;","    if (typeof code !== \"string\" && !(code instanceof String)) {","        code = toString(code);","    }","","    lookahead = null;","","    // Options matching.","    options = assign({}, options);","","    var acornOptions = {","        ecmaVersion: DEFAULT_ECMA_VERSION,","        plugins: {","            espree: true","        }","    };","","    resetExtra();","","    // Of course we collect tokens here.","    options.tokens = true;","    extra.tokens = [];","","    extra.range = (typeof options.range === \"boolean\") && options.range;","    acornOptions.ranges = extra.range;","","    extra.loc = (typeof options.loc === \"boolean\") && options.loc;","    acornOptions.locations = extra.loc;","","    extra.comment = typeof options.comment === \"boolean\" && options.comment;","","    if (extra.comment) {","        acornOptions.onComment = function() {","            var comment = convertAcornCommentToEsprimaComment.apply(this, arguments);","            extra.comments.push(comment);","        };","    }","","    extra.tolerant = typeof options.tolerant === \"boolean\" && options.tolerant;","","    acornOptions.ecmaVersion = extra.ecmaVersion = normalizeEcmaVersion(options.ecmaVersion);","","    // apply parsing flags","    if (options.ecmaFeatures && typeof options.ecmaFeatures === \"object\") {","        extra.ecmaFeatures = assign({}, options.ecmaFeatures);","        impliedStrict = extra.ecmaFeatures.impliedStrict;","        extra.ecmaFeatures.impliedStrict = typeof impliedStrict === \"boolean\" && impliedStrict;","    }","","    try {","        var tokenizer = acorn.tokenizer(code, acornOptions);","        while ((lookahead = tokenizer.getToken()).type !== tt.eof) {","            translator.onToken(lookahead, extra);","        }","","        // filterTokenLocation();","        tokens = extra.tokens;","","        if (extra.comment) {","            tokens.comments = extra.comments;","        }","        if (extra.tolerant) {","            tokens.errors = extra.errors;","        }","    } catch (e) {","        throw e;","    }","    return tokens;","}","","//------------------------------------------------------------------------------","// Parser","//------------------------------------------------------------------------------","","","","/**"," * Converts an Acorn comment to a Esprima comment."," * @param {boolean} block True if it's a block comment, false if not."," * @param {string} text The text of the comment."," * @param {int} start The index at which the comment starts."," * @param {int} end The index at which the comment ends."," * @param {Location} startLoc The location at which the comment starts."," * @param {Location} endLoc The location at which the comment ends."," * @returns {Object} The comment object."," * @private"," */","function convertAcornCommentToEsprimaComment(block, text, start, end, startLoc, endLoc) {","    var comment = {","        type: block ? \"Block\" : \"Line\",","        value: text","    };","","    if (typeof start === \"number\") {","        comment.start = start;","        comment.end = end;","        comment.range = [start, end];","    }","","    if (typeof startLoc === \"object\") {","        comment.loc = {","            start: startLoc,","            end: endLoc","        };","    }","","    return comment;","}","","/**"," * Parses the given code."," * @param {string} code The code to tokenize."," * @param {Object} options Options defining how to tokenize."," * @returns {ASTNode} The \"Program\" AST node."," * @throws {SyntaxError} If the input code is invalid."," * @private"," */","function parse(code, options) {","    var program,","        toString = String,","        translator,","        impliedStrict,","        acornOptions = {","            ecmaVersion: DEFAULT_ECMA_VERSION,","            plugins: {","                espree: true","            }","        };","","    lastToken = null;","","    if (typeof code !== \"string\" && !(code instanceof String)) {","        code = toString(code);","    }","","    resetExtra();","    commentAttachment.reset();","","    if (typeof options !== \"undefined\") {","        extra.range = (typeof options.range === \"boolean\") && options.range;","        extra.loc = (typeof options.loc === \"boolean\") && options.loc;","        extra.attachComment = (typeof options.attachComment === \"boolean\") && options.attachComment;","","        if (extra.loc && options.source !== null && options.source !== undefined) {","            extra.source = toString(options.source);","        }","","        if (typeof options.tokens === \"boolean\" && options.tokens) {","            extra.tokens = [];","            translator = new TokenTranslator(tt, code);","        }","        if (typeof options.comment === \"boolean\" && options.comment) {","            extra.comment = true;","            extra.comments = [];","        }","        if (typeof options.tolerant === \"boolean\" && options.tolerant) {","            extra.errors = [];","        }","        if (extra.attachComment) {","            extra.range = true;","            extra.comments = [];","            commentAttachment.reset();","        }","","        acornOptions.ecmaVersion = extra.ecmaVersion = normalizeEcmaVersion(options.ecmaVersion);","","        if (options.sourceType === \"module\") {","            extra.isModule = true;","","            // modules must be in 6 at least","            if (acornOptions.ecmaVersion < 6) {","                acornOptions.ecmaVersion = 6;","                extra.ecmaVersion = 6;","            }","","            acornOptions.sourceType = \"module\";","        }","","        // apply parsing flags after sourceType to allow overriding","        if (options.ecmaFeatures && typeof options.ecmaFeatures === \"object\") {","            extra.ecmaFeatures = assign({}, options.ecmaFeatures);","            impliedStrict = extra.ecmaFeatures.impliedStrict;","            extra.ecmaFeatures.impliedStrict = typeof impliedStrict === \"boolean\" && impliedStrict;","            if (options.ecmaFeatures.globalReturn) {","                acornOptions.allowReturnOutsideFunction = true;","            }","        }","","","        acornOptions.onToken = function(token) {","            if (extra.tokens) {","                translator.onToken(token, extra);","            }","            if (token.type !== tt.eof) {","                lastToken = token;","            }","        };","","        if (extra.attachComment || extra.comment) {","            acornOptions.onComment = function() {","                var comment = convertAcornCommentToEsprimaComment.apply(this, arguments);","                extra.comments.push(comment);","","                if (extra.attachComment) {","                    commentAttachment.addComment(comment);","                }","            };","        }","","        if (extra.range) {","            acornOptions.ranges = true;","        }","","        if (extra.loc) {","            acornOptions.locations = true;","        }","","        if (extra.ecmaFeatures.jsx) {","            // Should process jsx plugin before espree plugin.","            acornOptions.plugins = {","                jsx: true,","                espree: true","            };","        }","    }","","    program = acorn.parse(code, acornOptions);","    program.sourceType = extra.isModule ? \"module\" : \"script\";","","    if (extra.comment || extra.attachComment) {","        program.comments = extra.comments;","    }","","    if (extra.tokens) {","        program.tokens = extra.tokens;","    }","","    /*","     * Adjust opening and closing position of program to match Esprima.","     * Acorn always starts programs at range 0 whereas Esprima starts at the","     * first AST node's start (the only real difference is when there's leading","     * whitespace or leading comments). Acorn also counts trailing whitespace","     * as part of the program whereas Esprima only counts up to the last token.","     */","    if (program.range) {","        program.range[0] = program.body.length ? program.body[0].range[0] : program.range[0];","        program.range[1] = lastToken ? lastToken.range[1] : program.range[1];","    }","","    if (program.loc) {","        program.loc.start = program.body.length ? program.body[0].loc.start : program.loc.start;","        program.loc.end = lastToken ? lastToken.loc.end : program.loc.end;","    }","","    return program;","}","","//------------------------------------------------------------------------------","// Public","//------------------------------------------------------------------------------","","exports.version = require(\"./package.json\").version;","","exports.tokenize = tokenize;","","exports.parse = parse;","","// Deep copy.","/* istanbul ignore next */","exports.Syntax = (function() {","    var name, types = {};","","    if (typeof Object.create === \"function\") {","        types = Object.create(null);","    }","","    for (name in astNodeTypes) {","        if (astNodeTypes.hasOwnProperty(name)) {","            types[name] = astNodeTypes[name];","        }","    }","","    if (typeof Object.freeze === \"function\") {","        Object.freeze(types);","    }","","    return types;","}());","","/* istanbul ignore next */","exports.VisitorKeys = (function() {","    var visitorKeys = require(\"./lib/visitor-keys\");","    var name,","        keys = {};","","    if (typeof Object.create === \"function\") {","        keys = Object.create(null);","    }","","    for (name in visitorKeys) {","        if (visitorKeys.hasOwnProperty(name)) {","            keys[name] = visitorKeys[name];","        }","    }","","    if (typeof Object.freeze === \"function\") {","        Object.freeze(keys);","    }","","    return keys;","}());",""],"l":{"61":1,"68":1,"69":1,"70":1,"80":1,"81":0,"82":0,"83":0,"85":0,"86":0,"91":0,"99":1,"100":0,"117":1,"121":1,"128":1,"129":0,"130":0,"134":0,"135":0,"138":0,"144":0,"147":0,"150":0,"160":1,"161":0,"163":0,"166":0,"172":0,"175":0,"186":1,"188":0,"189":0,"193":0,"194":0,"195":0,"196":0,"201":0,"204":0,"206":0,"207":0,"208":0,"211":0,"212":0,"213":0,"218":0,"219":0,"222":0,"223":0,"226":0,"227":0,"230":0,"239":1,"240":0,"241":0,"243":0,"248":0,"252":0,"253":0,"256":0,"259":0,"269":1,"270":0,"271":0,"272":0,"276":1,"278":0,"280":0,"282":0,"283":0,"284":0,"285":0,"287":0,"292":0,"294":0,"296":0,"297":0,"298":0,"299":0,"302":0,"305":0,"309":0,"310":0,"311":0,"312":0,"314":0,"318":0,"320":0,"322":0,"325":0,"327":0,"328":0,"330":0,"331":0,"332":0,"333":0,"335":0,"339":0,"341":0,"352":0,"353":0,"354":0,"355":0,"356":0,"366":0,"367":0,"371":0,"372":0,"373":0,"375":0,"376":0,"378":0,"379":0,"380":0,"382":0,"386":0,"389":0,"395":0,"396":0,"397":0,"398":0,"400":0,"401":0,"404":0,"405":0,"408":0,"409":0,"410":0,"412":0,"413":0,"414":0,"417":0,"418":0,"423":0,"424":0,"434":0,"435":0,"437":0,"440":0,"441":0,"442":0,"445":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"470":0,"471":0,"473":0,"474":0,"476":0,"477":0,"478":0,"479":0,"483":0,"486":0,"487":0,"490":0,"500":0,"501":0,"502":0,"503":0,"504":0,"507":0,"524":1,"525":0,"530":0,"531":0,"532":0,"535":0,"538":0,"540":0,"547":0,"550":0,"551":0,"553":0,"554":0,"556":0,"557":0,"559":0,"561":0,"562":0,"563":0,"564":0,"568":0,"570":0,"573":0,"574":0,"575":0,"576":0,"579":0,"580":0,"581":0,"582":0,"586":0,"588":0,"589":0,"591":0,"592":0,"595":0,"597":0,"617":1,"618":0,"623":0,"624":0,"625":0,"626":0,"629":0,"630":0,"636":0,"647":1,"648":0,"659":0,"661":0,"662":0,"665":0,"666":0,"668":0,"669":0,"670":0,"671":0,"673":0,"674":0,"677":0,"678":0,"679":0,"681":0,"682":0,"683":0,"685":0,"686":0,"688":0,"689":0,"690":0,"691":0,"694":0,"696":0,"697":0,"700":0,"701":0,"702":0,"705":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"719":0,"720":0,"721":0,"723":0,"724":0,"728":0,"729":0,"730":0,"731":0,"733":0,"734":0,"739":0,"740":0,"743":0,"744":0,"747":0,"749":0,"756":0,"757":0,"759":0,"760":0,"763":0,"764":0,"774":0,"775":0,"776":0,"779":0,"780":0,"781":0,"784":0,"791":1,"793":1,"795":1,"799":1,"800":1,"802":1,"803":1,"806":1,"807":78,"808":78,"812":1,"813":1,"816":1,"820":1,"821":1,"822":1,"825":1,"826":1,"829":1,"830":80,"831":80,"835":1,"836":1,"839":1}},"/home/travis/build/npmtest/node-npmtest-espree/node_modules/espree/lib/ast-node-types.js":{"path":"/home/travis/build/npmtest/node-npmtest-espree/node_modules/espree/lib/ast-node-types.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":97,"column":2}}},"branchMap":{},"code":["/**"," * @fileoverview The AST node types produced by the parser."," * @author Nicholas C. Zakas"," */","","\"use strict\";","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","// None!","","//------------------------------------------------------------------------------","// Public","//------------------------------------------------------------------------------","","module.exports = {","    AssignmentExpression: \"AssignmentExpression\",","    AssignmentPattern: \"AssignmentPattern\",","    ArrayExpression: \"ArrayExpression\",","    ArrayPattern: \"ArrayPattern\",","    ArrowFunctionExpression: \"ArrowFunctionExpression\",","    BlockStatement: \"BlockStatement\",","    BinaryExpression: \"BinaryExpression\",","    BreakStatement: \"BreakStatement\",","    CallExpression: \"CallExpression\",","    CatchClause: \"CatchClause\",","    ClassBody: \"ClassBody\",","    ClassDeclaration: \"ClassDeclaration\",","    ClassExpression: \"ClassExpression\",","    ConditionalExpression: \"ConditionalExpression\",","    ContinueStatement: \"ContinueStatement\",","    DoWhileStatement: \"DoWhileStatement\",","    DebuggerStatement: \"DebuggerStatement\",","    EmptyStatement: \"EmptyStatement\",","    ExperimentalRestProperty: \"ExperimentalRestProperty\",","    ExperimentalSpreadProperty: \"ExperimentalSpreadProperty\",","    ExpressionStatement: \"ExpressionStatement\",","    ForStatement: \"ForStatement\",","    ForInStatement: \"ForInStatement\",","    ForOfStatement: \"ForOfStatement\",","    FunctionDeclaration: \"FunctionDeclaration\",","    FunctionExpression: \"FunctionExpression\",","    Identifier: \"Identifier\",","    IfStatement: \"IfStatement\",","    Literal: \"Literal\",","    LabeledStatement: \"LabeledStatement\",","    LogicalExpression: \"LogicalExpression\",","    MemberExpression: \"MemberExpression\",","    MetaProperty: \"MetaProperty\",","    MethodDefinition: \"MethodDefinition\",","    NewExpression: \"NewExpression\",","    ObjectExpression: \"ObjectExpression\",","    ObjectPattern: \"ObjectPattern\",","    Program: \"Program\",","    Property: \"Property\",","    RestElement: \"RestElement\",","    ReturnStatement: \"ReturnStatement\",","    SequenceExpression: \"SequenceExpression\",","    SpreadElement: \"SpreadElement\",","    Super: \"Super\",","    SwitchCase: \"SwitchCase\",","    SwitchStatement: \"SwitchStatement\",","    TaggedTemplateExpression: \"TaggedTemplateExpression\",","    TemplateElement: \"TemplateElement\",","    TemplateLiteral: \"TemplateLiteral\",","    ThisExpression: \"ThisExpression\",","    ThrowStatement: \"ThrowStatement\",","    TryStatement: \"TryStatement\",","    UnaryExpression: \"UnaryExpression\",","    UpdateExpression: \"UpdateExpression\",","    VariableDeclaration: \"VariableDeclaration\",","    VariableDeclarator: \"VariableDeclarator\",","    WhileStatement: \"WhileStatement\",","    WithStatement: \"WithStatement\",","    YieldExpression: \"YieldExpression\",","    JSXIdentifier: \"JSXIdentifier\",","    JSXNamespacedName: \"JSXNamespacedName\",","    JSXMemberExpression: \"JSXMemberExpression\",","    JSXEmptyExpression: \"JSXEmptyExpression\",","    JSXExpressionContainer: \"JSXExpressionContainer\",","    JSXElement: \"JSXElement\",","    JSXClosingElement: \"JSXClosingElement\",","    JSXOpeningElement: \"JSXOpeningElement\",","    JSXAttribute: \"JSXAttribute\",","    JSXSpreadAttribute: \"JSXSpreadAttribute\",","    JSXText: \"JSXText\",","    ExportDefaultDeclaration: \"ExportDefaultDeclaration\",","    ExportNamedDeclaration: \"ExportNamedDeclaration\",","    ExportAllDeclaration: \"ExportAllDeclaration\",","    ExportSpecifier: \"ExportSpecifier\",","    ImportDeclaration: \"ImportDeclaration\",","    ImportSpecifier: \"ImportSpecifier\",","    ImportDefaultSpecifier: \"ImportDefaultSpecifier\",","    ImportNamespaceSpecifier: \"ImportNamespaceSpecifier\"","};",""],"l":{"18":1}},"/home/travis/build/npmtest/node-npmtest-espree/node_modules/espree/lib/comment-attachment.js":{"path":"/home/travis/build/npmtest/node-npmtest-espree/node_modules/espree/lib/comment-attachment.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":31,"loc":{"start":{"line":31,"column":11},"end":{"line":31,"column":22}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":16},"end":{"line":38,"column":34}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":20},"end":{"line":43,"column":35}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"2":{"start":{"line":18,"column":0},"end":{"line":23,"column":2}},"3":{"start":{"line":29,"column":0},"end":{"line":175,"column":2}},"4":{"start":{"line":32,"column":8},"end":{"line":32,"column":36}},"5":{"start":{"line":33,"column":8},"end":{"line":33,"column":35}},"6":{"start":{"line":34,"column":8},"end":{"line":34,"column":36}},"7":{"start":{"line":35,"column":8},"end":{"line":35,"column":34}},"8":{"start":{"line":39,"column":8},"end":{"line":39,"column":45}},"9":{"start":{"line":40,"column":8},"end":{"line":40,"column":44}},"10":{"start":{"line":44,"column":8},"end":{"line":47,"column":14}},"11":{"start":{"line":49,"column":8},"end":{"line":53,"column":9}},"12":{"start":{"line":50,"column":12},"end":{"line":52,"column":13}},"13":{"start":{"line":51,"column":16},"end":{"line":51,"column":23}},"14":{"start":{"line":55,"column":8},"end":{"line":85,"column":9}},"15":{"start":{"line":63,"column":12},"end":{"line":77,"column":13}},"16":{"start":{"line":64,"column":16},"end":{"line":64,"column":58}},"17":{"start":{"line":65,"column":16},"end":{"line":65,"column":44}},"18":{"start":{"line":76,"column":16},"end":{"line":76,"column":50}},"19":{"start":{"line":79,"column":12},"end":{"line":84,"column":13}},"20":{"start":{"line":82,"column":16},"end":{"line":82,"column":110}},"21":{"start":{"line":83,"column":16},"end":{"line":83,"column":98}},"22":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"23":{"start":{"line":89,"column":12},"end":{"line":89,"column":53}},"24":{"start":{"line":92,"column":8},"end":{"line":164,"column":9}},"25":{"start":{"line":93,"column":12},"end":{"line":108,"column":13}},"26":{"start":{"line":94,"column":16},"end":{"line":107,"column":17}},"27":{"start":{"line":95,"column":20},"end":{"line":95,"column":69}},"28":{"start":{"line":96,"column":20},"end":{"line":96,"column":53}},"29":{"start":{"line":101,"column":20},"end":{"line":106,"column":21}},"30":{"start":{"line":102,"column":24},"end":{"line":105,"column":25}},"31":{"start":{"line":103,"column":28},"end":{"line":103,"column":94}},"32":{"start":{"line":104,"column":28},"end":{"line":104,"column":34}},"33":{"start":{"line":109,"column":15},"end":{"line":164,"column":9}},"34":{"start":{"line":110,"column":12},"end":{"line":163,"column":13}},"35":{"start":{"line":111,"column":16},"end":{"line":118,"column":17}},"36":{"start":{"line":112,"column":20},"end":{"line":117,"column":21}},"37":{"start":{"line":113,"column":24},"end":{"line":116,"column":25}},"38":{"start":{"line":114,"column":28},"end":{"line":114,"column":63}},"39":{"start":{"line":115,"column":28},"end":{"line":115,"column":32}},"40":{"start":{"line":119,"column":16},"end":{"line":122,"column":17}},"41":{"start":{"line":120,"column":20},"end":{"line":120,"column":65}},"42":{"start":{"line":121,"column":20},"end":{"line":121,"column":47}},"43":{"start":{"line":138,"column":16},"end":{"line":142,"column":17}},"44":{"start":{"line":139,"column":20},"end":{"line":141,"column":21}},"45":{"start":{"line":140,"column":24},"end":{"line":140,"column":30}},"46":{"start":{"line":150,"column":16},"end":{"line":150,"column":73}},"47":{"start":{"line":151,"column":16},"end":{"line":153,"column":17}},"48":{"start":{"line":152,"column":20},"end":{"line":152,"column":48}},"49":{"start":{"line":159,"column":16},"end":{"line":159,"column":66}},"50":{"start":{"line":160,"column":16},"end":{"line":162,"column":17}},"51":{"start":{"line":161,"column":20},"end":{"line":161,"column":44}},"52":{"start":{"line":166,"column":8},"end":{"line":166,"column":34}},"53":{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},"54":{"start":{"line":169,"column":12},"end":{"line":169,"column":53}},"55":{"start":{"line":172,"column":8},"end":{"line":172,"column":42}}},"branchMap":{"1":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":12}},{"start":{"line":50,"column":12},"end":{"line":50,"column":12}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"4":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":12},"end":{"line":63,"column":12}},{"start":{"line":63,"column":12},"end":{"line":63,"column":12}}]},"5":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":79,"column":12}},{"start":{"line":79,"column":12},"end":{"line":79,"column":12}}]},"6":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":16},"end":{"line":79,"column":49}},{"start":{"line":80,"column":20},"end":{"line":80,"column":94}},{"start":{"line":81,"column":20},"end":{"line":81,"column":123}}]},"7":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":15},"end":{"line":88,"column":48}},{"start":{"line":88,"column":52},"end":{"line":88,"column":135}}]},"8":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":8}},{"start":{"line":92,"column":8},"end":{"line":92,"column":8}}]},"9":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":12},"end":{"line":93,"column":12}},{"start":{"line":93,"column":12},"end":{"line":93,"column":12}}]},"10":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":16},"end":{"line":94,"column":16}},{"start":{"line":94,"column":16},"end":{"line":94,"column":16}}]},"11":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":24},"end":{"line":102,"column":24}},{"start":{"line":102,"column":24},"end":{"line":102,"column":24}}]},"12":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":15},"end":{"line":109,"column":15}},{"start":{"line":109,"column":15},"end":{"line":109,"column":15}}]},"13":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":12}},{"start":{"line":110,"column":12},"end":{"line":110,"column":12}}]},"14":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":16},"end":{"line":111,"column":16}},{"start":{"line":111,"column":16},"end":{"line":111,"column":16}}]},"15":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":24},"end":{"line":113,"column":24}},{"start":{"line":113,"column":24},"end":{"line":113,"column":24}}]},"16":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":16},"end":{"line":119,"column":16}},{"start":{"line":119,"column":16},"end":{"line":119,"column":16}}]},"17":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":20},"end":{"line":139,"column":20}},{"start":{"line":139,"column":20},"end":{"line":139,"column":20}}]},"18":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":16},"end":{"line":151,"column":16}},{"start":{"line":151,"column":16},"end":{"line":151,"column":16}}]},"19":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":16},"end":{"line":160,"column":16}},{"start":{"line":160,"column":16},"end":{"line":160,"column":16}}]},"20":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":8},"end":{"line":168,"column":8}},{"start":{"line":168,"column":8},"end":{"line":168,"column":8}}]}},"code":["/**"," * @fileoverview Attaches comments to the AST."," * @author Nicholas C. Zakas"," */","","\"use strict\";","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","var astNodeTypes = require(\"./ast-node-types\");","","//------------------------------------------------------------------------------","// Private","//------------------------------------------------------------------------------","","var extra = {","    trailingComments: [],","    leadingComments: [],","    bottomRightStack: [],","    previousNode: null","};","","//------------------------------------------------------------------------------","// Public","//------------------------------------------------------------------------------","","module.exports = {","","    reset: function() {","        extra.trailingComments = [];","        extra.leadingComments = [];","        extra.bottomRightStack = [];","        extra.previousNode = null;","    },","","    addComment: function(comment) {","        extra.trailingComments.push(comment);","        extra.leadingComments.push(comment);","    },","","    processComment: function(node) {","        var lastChild,","            trailingComments,","            i,","            j;","","        if (node.type === astNodeTypes.Program) {","            if (node.body.length > 0) {","                return;","            }","        }","","        if (extra.trailingComments.length > 0) {","","            /*","             * If the first comment in trailingComments comes after the","             * current node, then we're good - all comments in the array will","             * come after the node and so it's safe to add then as official","             * trailingComments.","             */","            if (extra.trailingComments[0].range[0] >= node.range[1]) {","                trailingComments = extra.trailingComments;","                extra.trailingComments = [];","            } else {","","                /*","                 * Otherwise, if the first comment doesn't come after the","                 * current node, that means we have a mix of leading and trailing","                 * comments in the array and that leadingComments contains the","                 * same items as trailingComments. Reset trailingComments to","                 * zero items and we'll handle this by evaluating leadingComments","                 * later.","                 */","                extra.trailingComments.length = 0;","            }","        } else {","            if (extra.bottomRightStack.length > 0 &&","                    extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments &&","                    extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments[0].range[0] >= node.range[1]) {","                trailingComments = extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments;","                delete extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments;","            }","        }","","        // Eating the stack.","        while (extra.bottomRightStack.length > 0 && extra.bottomRightStack[extra.bottomRightStack.length - 1].range[0] >= node.range[0]) {","            lastChild = extra.bottomRightStack.pop();","        }","","        if (lastChild) {","            if (lastChild.leadingComments) {","                if (lastChild.leadingComments[lastChild.leadingComments.length - 1].range[1] <= node.range[0]) {","                    node.leadingComments = lastChild.leadingComments;","                    delete lastChild.leadingComments;","                } else {","                    // A leading comment for an anonymous class had been stolen by its first MethodDefinition,","                    // so this takes back the leading comment.","                    // See Also: https://github.com/eslint/espree/issues/158","                    for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {","                        if (lastChild.leadingComments[i].range[1] <= node.range[0]) {","                            node.leadingComments = lastChild.leadingComments.splice(0, i + 1);","                            break;","                        }","                    }","                }","            }","        } else if (extra.leadingComments.length > 0) {","            if (extra.leadingComments[extra.leadingComments.length - 1].range[1] <= node.range[0]) {","                if (extra.previousNode) {","                    for (j = 0; j < extra.leadingComments.length; j++) {","                        if (extra.leadingComments[j].end < extra.previousNode.end) {","                            extra.leadingComments.splice(j, 1);","                            j--;","                        }","                    }","                }","                if (extra.leadingComments.length > 0) {","                    node.leadingComments = extra.leadingComments;","                    extra.leadingComments = [];","                }","            } else {","","                // https://github.com/eslint/espree/issues/2","","                /*","                 * In special cases, such as return (without a value) and","                 * debugger, all comments will end up as leadingComments and","                 * will otherwise be eliminated. This extra step runs when the","                 * bottomRightStack is empty and there are comments left","                 * in leadingComments.","                 *","                 * This loop figures out the stopping point between the actual","                 * leading and trailing comments by finding the location of the","                 * first comment that comes after the given node.","                 */","                for (i = 0; i < extra.leadingComments.length; i++) {","                    if (extra.leadingComments[i].range[1] > node.range[0]) {","                        break;","                    }","                }","","                /*","                 * Split the array based on the location of the first comment","                 * that comes after the node. Keep in mind that this could","                 * result in an empty array, and if so, the array must be","                 * deleted.","                 */","                node.leadingComments = extra.leadingComments.slice(0, i);","                if (node.leadingComments.length === 0) {","                    delete node.leadingComments;","                }","","                /*","                 * Similarly, trailing comments are attached later. The variable","                 * must be reset to null if there are no trailing comments.","                 */","                trailingComments = extra.leadingComments.slice(i);","                if (trailingComments.length === 0) {","                    trailingComments = null;","                }","            }","        }","","        extra.previousNode = node;","","        if (trailingComments) {","            node.trailingComments = trailingComments;","        }","","        extra.bottomRightStack.push(node);","    }","","};",""],"l":{"12":1,"18":1,"29":1,"32":0,"33":0,"34":0,"35":0,"39":0,"40":0,"44":0,"49":0,"50":0,"51":0,"55":0,"63":0,"64":0,"65":0,"76":0,"79":0,"82":0,"83":0,"88":0,"89":0,"92":0,"93":0,"94":0,"95":0,"96":0,"101":0,"102":0,"103":0,"104":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"119":0,"120":0,"121":0,"138":0,"139":0,"140":0,"150":0,"151":0,"152":0,"159":0,"160":0,"161":0,"166":0,"168":0,"169":0,"172":0}},"/home/travis/build/npmtest/node-npmtest-espree/node_modules/espree/lib/token-translator.js":{"path":"/home/travis/build/npmtest/node-npmtest-espree/node_modules/espree/lib/token-translator.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"convertTemplatePart","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":43}}},"2":{"name":"TokenTranslator","line":73,"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":46}}},"3":{"name":"(anonymous_3)","line":100,"loc":{"start":{"line":100,"column":15},"end":{"line":100,"column":38}}},"4":{"name":"(anonymous_4)","line":175,"loc":{"start":{"line":175,"column":13},"end":{"line":175,"column":36}}},"5":{"name":"translateTemplateTokens","line":188,"loc":{"start":{"line":188,"column":8},"end":{"line":188,"column":43}}}},"statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":34,"column":2}},"2":{"start":{"line":43,"column":0},"end":{"line":64,"column":1}},"3":{"start":{"line":44,"column":4},"end":{"line":45,"column":54}},"4":{"start":{"line":47,"column":4},"end":{"line":50,"column":6}},"5":{"start":{"line":52,"column":4},"end":{"line":57,"column":5}},"6":{"start":{"line":53,"column":8},"end":{"line":56,"column":10}},"7":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"8":{"start":{"line":60,"column":8},"end":{"line":60,"column":72}},"9":{"start":{"line":63,"column":4},"end":{"line":63,"column":17}},"10":{"start":{"line":73,"column":0},"end":{"line":87,"column":1}},"11":{"start":{"line":76,"column":4},"end":{"line":76,"column":40}},"12":{"start":{"line":79,"column":4},"end":{"line":79,"column":22}},"13":{"start":{"line":82,"column":4},"end":{"line":82,"column":28}},"14":{"start":{"line":85,"column":4},"end":{"line":85,"column":22}},"15":{"start":{"line":89,"column":0},"end":{"line":250,"column":2}},"16":{"start":{"line":102,"column":8},"end":{"line":103,"column":37}},"17":{"start":{"line":105,"column":8},"end":{"line":164,"column":9}},"18":{"start":{"line":106,"column":12},"end":{"line":106,"column":42}},"19":{"start":{"line":109,"column":12},"end":{"line":111,"column":13}},"20":{"start":{"line":110,"column":16},"end":{"line":110,"column":43}},"21":{"start":{"line":113,"column":12},"end":{"line":115,"column":13}},"22":{"start":{"line":114,"column":16},"end":{"line":114,"column":43}},"23":{"start":{"line":117,"column":15},"end":{"line":164,"column":9}},"24":{"start":{"line":129,"column":12},"end":{"line":129,"column":42}},"25":{"start":{"line":130,"column":12},"end":{"line":130,"column":67}},"26":{"start":{"line":131,"column":15},"end":{"line":164,"column":9}},"27":{"start":{"line":132,"column":12},"end":{"line":132,"column":45}},"28":{"start":{"line":133,"column":15},"end":{"line":164,"column":9}},"29":{"start":{"line":134,"column":12},"end":{"line":134,"column":39}},"30":{"start":{"line":135,"column":15},"end":{"line":164,"column":9}},"31":{"start":{"line":136,"column":12},"end":{"line":142,"column":13}},"32":{"start":{"line":137,"column":16},"end":{"line":137,"column":43}},"33":{"start":{"line":138,"column":19},"end":{"line":142,"column":13}},"34":{"start":{"line":139,"column":16},"end":{"line":139,"column":40}},"35":{"start":{"line":141,"column":16},"end":{"line":141,"column":43}},"36":{"start":{"line":143,"column":15},"end":{"line":164,"column":9}},"37":{"start":{"line":144,"column":12},"end":{"line":144,"column":39}},"38":{"start":{"line":145,"column":12},"end":{"line":145,"column":67}},"39":{"start":{"line":146,"column":15},"end":{"line":164,"column":9}},"40":{"start":{"line":148,"column":12},"end":{"line":153,"column":13}},"41":{"start":{"line":149,"column":16},"end":{"line":149,"column":48}},"42":{"start":{"line":150,"column":16},"end":{"line":150,"column":43}},"43":{"start":{"line":152,"column":16},"end":{"line":152,"column":42}},"44":{"start":{"line":155,"column":12},"end":{"line":155,"column":67}},"45":{"start":{"line":156,"column":15},"end":{"line":164,"column":9}},"46":{"start":{"line":157,"column":12},"end":{"line":157,"column":49}},"47":{"start":{"line":158,"column":12},"end":{"line":158,"column":36}},"48":{"start":{"line":159,"column":12},"end":{"line":162,"column":14}},"49":{"start":{"line":163,"column":12},"end":{"line":163,"column":66}},"50":{"start":{"line":166,"column":8},"end":{"line":166,"column":21}},"51":{"start":{"line":177,"column":8},"end":{"line":180,"column":42}},"52":{"start":{"line":188,"column":8},"end":{"line":191,"column":9}},"53":{"start":{"line":189,"column":12},"end":{"line":189,"column":71}},"54":{"start":{"line":190,"column":12},"end":{"line":190,"column":30}},"55":{"start":{"line":193,"column":8},"end":{"line":201,"column":9}},"56":{"start":{"line":196,"column":12},"end":{"line":198,"column":13}},"57":{"start":{"line":197,"column":16},"end":{"line":197,"column":69}},"58":{"start":{"line":200,"column":12},"end":{"line":200,"column":19}},"59":{"start":{"line":203,"column":8},"end":{"line":241,"column":9}},"60":{"start":{"line":206,"column":12},"end":{"line":209,"column":13}},"61":{"start":{"line":207,"column":16},"end":{"line":207,"column":69}},"62":{"start":{"line":208,"column":16},"end":{"line":208,"column":40}},"63":{"start":{"line":211,"column":12},"end":{"line":211,"column":39}},"64":{"start":{"line":214,"column":12},"end":{"line":216,"column":13}},"65":{"start":{"line":215,"column":16},"end":{"line":215,"column":42}},"66":{"start":{"line":218,"column":12},"end":{"line":218,"column":19}},"67":{"start":{"line":219,"column":15},"end":{"line":241,"column":9}},"68":{"start":{"line":220,"column":12},"end":{"line":220,"column":39}},"69":{"start":{"line":221,"column":12},"end":{"line":221,"column":38}},"70":{"start":{"line":222,"column":12},"end":{"line":222,"column":19}},"71":{"start":{"line":223,"column":15},"end":{"line":241,"column":9}},"72":{"start":{"line":226,"column":12},"end":{"line":228,"column":13}},"73":{"start":{"line":227,"column":16},"end":{"line":227,"column":69}},"74":{"start":{"line":231,"column":12},"end":{"line":231,"column":37}},"75":{"start":{"line":232,"column":12},"end":{"line":232,"column":19}},"76":{"start":{"line":233,"column":15},"end":{"line":241,"column":9}},"77":{"start":{"line":234,"column":12},"end":{"line":237,"column":13}},"78":{"start":{"line":235,"column":16},"end":{"line":235,"column":54}},"79":{"start":{"line":236,"column":16},"end":{"line":236,"column":40}},"80":{"start":{"line":239,"column":12},"end":{"line":239,"column":39}},"81":{"start":{"line":240,"column":12},"end":{"line":240,"column":19}},"82":{"start":{"line":243,"column":8},"end":{"line":246,"column":9}},"83":{"start":{"line":244,"column":12},"end":{"line":244,"column":65}},"84":{"start":{"line":245,"column":12},"end":{"line":245,"column":36}},"85":{"start":{"line":248,"column":8},"end":{"line":248,"column":50}},"86":{"start":{"line":256,"column":0},"end":{"line":256,"column":33}}},"branchMap":{"1":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"2":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"3":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]},"4":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":12},"end":{"line":109,"column":12}},{"start":{"line":109,"column":12},"end":{"line":109,"column":12}}]},"5":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":12},"end":{"line":113,"column":12}},{"start":{"line":113,"column":12},"end":{"line":113,"column":12}}]},"6":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":16},"end":{"line":113,"column":37}},{"start":{"line":113,"column":42},"end":{"line":113,"column":65}},{"start":{"line":113,"column":69},"end":{"line":113,"column":90}}]},"7":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":15},"end":{"line":117,"column":15}},{"start":{"line":117,"column":15},"end":{"line":117,"column":15}}]},"8":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":19},"end":{"line":117,"column":35}},{"start":{"line":117,"column":39},"end":{"line":117,"column":56}},{"start":{"line":118,"column":17},"end":{"line":118,"column":35}},{"start":{"line":118,"column":39},"end":{"line":118,"column":57}},{"start":{"line":119,"column":17},"end":{"line":119,"column":35}},{"start":{"line":119,"column":39},"end":{"line":119,"column":57}},{"start":{"line":120,"column":17},"end":{"line":120,"column":32}},{"start":{"line":120,"column":36},"end":{"line":120,"column":56}},{"start":{"line":121,"column":17},"end":{"line":121,"column":34}},{"start":{"line":121,"column":38},"end":{"line":121,"column":58}},{"start":{"line":122,"column":17},"end":{"line":122,"column":37}},{"start":{"line":122,"column":41},"end":{"line":122,"column":61}},{"start":{"line":123,"column":17},"end":{"line":123,"column":34}},{"start":{"line":123,"column":38},"end":{"line":123,"column":61}},{"start":{"line":124,"column":17},"end":{"line":124,"column":35}},{"start":{"line":124,"column":39},"end":{"line":124,"column":59}},{"start":{"line":125,"column":17},"end":{"line":125,"column":38}},{"start":{"line":125,"column":42},"end":{"line":125,"column":60}},{"start":{"line":126,"column":18},"end":{"line":126,"column":28}},{"start":{"line":126,"column":32},"end":{"line":126,"column":45}},{"start":{"line":127,"column":17},"end":{"line":127,"column":30}}]},"9":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":15},"end":{"line":131,"column":15}},{"start":{"line":131,"column":15},"end":{"line":131,"column":15}}]},"10":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":15},"end":{"line":133,"column":15}},{"start":{"line":133,"column":15},"end":{"line":133,"column":15}}]},"11":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":19},"end":{"line":133,"column":43}},{"start":{"line":133,"column":47},"end":{"line":133,"column":76}}]},"12":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":15},"end":{"line":135,"column":15}},{"start":{"line":135,"column":15},"end":{"line":135,"column":15}}]},"13":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":12},"end":{"line":136,"column":12}},{"start":{"line":136,"column":12},"end":{"line":136,"column":12}}]},"14":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":16},"end":{"line":136,"column":39}},{"start":{"line":136,"column":43},"end":{"line":136,"column":67}}]},"15":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":19},"end":{"line":138,"column":19}},{"start":{"line":138,"column":19},"end":{"line":138,"column":19}}]},"16":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":15},"end":{"line":143,"column":15}},{"start":{"line":143,"column":15},"end":{"line":143,"column":15}}]},"17":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":15},"end":{"line":146,"column":15}},{"start":{"line":146,"column":15},"end":{"line":146,"column":15}}]},"18":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":12},"end":{"line":148,"column":12}},{"start":{"line":148,"column":12},"end":{"line":148,"column":12}}]},"19":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":15},"end":{"line":156,"column":15}},{"start":{"line":156,"column":15},"end":{"line":156,"column":15}}]},"20":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":193,"column":8}},{"start":{"line":193,"column":8},"end":{"line":193,"column":8}}]},"21":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":12},"end":{"line":196,"column":12}},{"start":{"line":196,"column":12},"end":{"line":196,"column":12}}]},"22":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":8}},{"start":{"line":203,"column":8},"end":{"line":203,"column":8}}]},"23":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":12},"end":{"line":206,"column":12}},{"start":{"line":206,"column":12},"end":{"line":206,"column":12}}]},"24":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":12},"end":{"line":214,"column":12}},{"start":{"line":214,"column":12},"end":{"line":214,"column":12}}]},"25":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":15},"end":{"line":219,"column":15}},{"start":{"line":219,"column":15},"end":{"line":219,"column":15}}]},"26":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":15},"end":{"line":223,"column":15}},{"start":{"line":223,"column":15},"end":{"line":223,"column":15}}]},"27":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":12},"end":{"line":226,"column":12}},{"start":{"line":226,"column":12},"end":{"line":226,"column":12}}]},"28":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":15},"end":{"line":233,"column":15}},{"start":{"line":233,"column":15},"end":{"line":233,"column":15}}]},"29":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":12},"end":{"line":234,"column":12}},{"start":{"line":234,"column":12},"end":{"line":234,"column":12}}]},"30":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":8},"end":{"line":243,"column":8}},{"start":{"line":243,"column":8},"end":{"line":243,"column":8}}]}},"code":["/**"," * @fileoverview Translates tokens between Acorn format and Esprima format."," * @author Nicholas C. Zakas"," */","/* eslint no-underscore-dangle: 0 */","","\"use strict\";","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","// none!","","//------------------------------------------------------------------------------","// Private","//------------------------------------------------------------------------------","","","// Esprima Token Types","var Token = {","    Boolean: \"Boolean\",","    EOF: \"<end>\",","    Identifier: \"Identifier\",","    Keyword: \"Keyword\",","    Null: \"Null\",","    Numeric: \"Numeric\",","    Punctuator: \"Punctuator\",","    String: \"String\",","    RegularExpression: \"RegularExpression\",","    Template: \"Template\",","    JSXIdentifier: \"JSXIdentifier\",","    JSXText: \"JSXText\"","};","","/**"," * Converts part of a template into an Esprima token."," * @param {AcornToken[]} tokens The Acorn tokens representing the template."," * @param {string} code The source code."," * @returns {EsprimaToken} The Esprima equivalent of the template token."," * @private"," */","function convertTemplatePart(tokens, code) {","    var firstToken = tokens[0],","        lastTemplateToken = tokens[tokens.length - 1];","","    var token = {","        type: Token.Template,","        value: code.slice(firstToken.start, lastTemplateToken.end)","    };","","    if (firstToken.loc) {","        token.loc = {","            start: firstToken.loc.start,","            end: lastTemplateToken.loc.end","        };","    }","","    if (firstToken.range) {","        token.range = [firstToken.range[0], lastTemplateToken.range[1]];","    }","","    return token;","}","","/**"," * Contains logic to translate Acorn tokens into Esprima tokens."," * @param {Object} acornTokTypes The Acorn token types."," * @param {string} code The source code Acorn is parsing. This is necessary"," *      to correct the \"value\" property of some tokens."," * @constructor"," */","function TokenTranslator(acornTokTypes, code) {","","    // token types","    this._acornTokTypes = acornTokTypes;","","    // token buffer for templates","    this._tokens = [];","","    // track the last curly brace","    this._curlyBrace = null;","","    // the source code","    this._code = code;","","}","","TokenTranslator.prototype = {","    constructor: TokenTranslator,","","    /**","     * Translates a single Esprima token to a single Acorn token. This may be","     * inaccurate due to how templates are handled differently in Esprima and","     * Acorn, but should be accurate for all other tokens.","     * @param {AcornToken} token The Acorn token to translate.","     * @param {Object} extra Espree extra object.","     * @returns {EsprimaToken} The Esprima version of the token.","     */","    translate: function(token, extra) {","","        var type = token.type,","            tt = this._acornTokTypes;","","        if (type === tt.name) {","            token.type = Token.Identifier;","","            // TODO: See if this is an Acorn bug","            if (token.value === \"static\") {","                token.type = Token.Keyword;","            }","","            if (extra.ecmaVersion > 5 && (token.value === \"yield\" || token.value === \"let\")) {","                token.type = Token.Keyword;","            }","","        } else if (type === tt.semi || type === tt.comma ||","                 type === tt.parenL || type === tt.parenR ||","                 type === tt.braceL || type === tt.braceR ||","                 type === tt.dot || type === tt.bracketL ||","                 type === tt.colon || type === tt.question ||","                 type === tt.bracketR || type === tt.ellipsis ||","                 type === tt.arrow || type === tt.jsxTagStart ||","                 type === tt.incDec || type === tt.starstar ||","                 type === tt.jsxTagEnd || type === tt.prefix ||","                 (type.binop && !type.keyword) ||","                 type.isAssign) {","","            token.type = Token.Punctuator;","            token.value = this._code.slice(token.start, token.end);","        } else if (type === tt.jsxName) {","            token.type = Token.JSXIdentifier;","        } else if (type.label === \"jsxText\" || type === tt.jsxAttrValueToken) {","            token.type = Token.JSXText;","        } else if (type.keyword) {","            if (type.keyword === \"true\" || type.keyword === \"false\") {","                token.type = Token.Boolean;","            } else if (type.keyword === \"null\") {","                token.type = Token.Null;","            } else {","                token.type = Token.Keyword;","            }","        } else if (type === tt.num) {","            token.type = Token.Numeric;","            token.value = this._code.slice(token.start, token.end);","        } else if (type === tt.string) {","","            if (extra.jsxAttrValueToken) {","                extra.jsxAttrValueToken = false;","                token.type = Token.JSXText;","            } else {","                token.type = Token.String;","            }","","            token.value = this._code.slice(token.start, token.end);","        } else if (type === tt.regexp) {","            token.type = Token.RegularExpression;","            var value = token.value;","            token.regex = {","                flags: value.flags,","                pattern: value.pattern","            };","            token.value = \"/\" + value.pattern + \"/\" + value.flags;","        }","","        return token;","    },","","    /**","     * Function to call during Acorn's onToken handler.","     * @param {AcornToken} token The Acorn token.","     * @param {Object} extra The Espree extra object.","     * @returns {void}","     */","    onToken: function(token, extra) {","","        var that = this,","            tt = this._acornTokTypes,","            tokens = extra.tokens,","            templateTokens = this._tokens;","","        /**","         * Flushes the buffered template tokens and resets the template","         * tracking.","         * @returns {void}","         * @private","         */","        function translateTemplateTokens() {","            tokens.push(convertTemplatePart(that._tokens, that._code));","            that._tokens = [];","        }","","        if (token.type === tt.eof) {","","            // might be one last curlyBrace","            if (this._curlyBrace) {","                tokens.push(this.translate(this._curlyBrace, extra));","            }","","            return;","        }","","        if (token.type === tt.backQuote) {","","            // if there's already a curly, it's not part of the template","            if (this._curlyBrace) {","                tokens.push(this.translate(this._curlyBrace, extra));","                this._curlyBrace = null;","            }","","            templateTokens.push(token);","","            // it's the end","            if (templateTokens.length > 1) {","                translateTemplateTokens();","            }","","            return;","        } else if (token.type === tt.dollarBraceL) {","            templateTokens.push(token);","            translateTemplateTokens();","            return;","        } else if (token.type === tt.braceR) {","","            // if there's already a curly, it's not part of the template","            if (this._curlyBrace) {","                tokens.push(this.translate(this._curlyBrace, extra));","            }","","            // store new curly for later","            this._curlyBrace = token;","            return;","        } else if (token.type === tt.template) {","            if (this._curlyBrace) {","                templateTokens.push(this._curlyBrace);","                this._curlyBrace = null;","            }","","            templateTokens.push(token);","            return;","        }","","        if (this._curlyBrace) {","            tokens.push(this.translate(this._curlyBrace, extra));","            this._curlyBrace = null;","        }","","        tokens.push(this.translate(token, extra));","    }","};","","//------------------------------------------------------------------------------","// Public","//------------------------------------------------------------------------------","","module.exports = TokenTranslator;",""],"l":{"21":1,"43":1,"44":0,"47":0,"52":0,"53":0,"59":0,"60":0,"63":0,"73":1,"76":0,"79":0,"82":0,"85":0,"89":1,"102":0,"105":0,"106":0,"109":0,"110":0,"113":0,"114":0,"117":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"141":0,"143":0,"144":0,"145":0,"146":0,"148":0,"149":0,"150":0,"152":0,"155":0,"156":0,"157":0,"158":0,"159":0,"163":0,"166":0,"177":0,"188":1,"189":0,"190":0,"193":0,"196":0,"197":0,"200":0,"203":0,"206":0,"207":0,"208":0,"211":0,"214":0,"215":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"226":0,"227":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"239":0,"240":0,"243":0,"244":0,"245":0,"248":0,"256":1}},"/home/travis/build/npmtest/node-npmtest-espree/node_modules/espree/lib/visitor-keys.js":{"path":"/home/travis/build/npmtest/node-npmtest-espree/node_modules/espree/lib/visitor-keys.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":40,"column":0},"end":{"line":127,"column":2}}},"branchMap":{},"code":["/**"," * @fileoverview The visitor keys for the node types Espree supports"," * @author Nicholas C. Zakas"," *"," * This file contains code from estraverse-fb."," *"," * The MIT license. Copyright (c) 2014 Ingvar Stepanyan"," *"," * Permission is hereby granted, free of charge, to any person obtaining a copy"," * of this software and associated documentation files (the \"Software\"), to deal"," * in the Software without restriction, including without limitation the rights"," * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"," * copies of the Software, and to permit persons to whom the Software is"," * furnished to do so, subject to the following conditions:"," *"," * The above copyright notice and this permission notice shall be included in all"," * copies or substantial portions of the Software."," *"," * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"," * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE"," * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"," * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"," * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE"," * SOFTWARE."," */","","\"use strict\";","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","// None!","","//------------------------------------------------------------------------------","// Public","//------------------------------------------------------------------------------","","module.exports = {","","    // ECMAScript","    AssignmentExpression: [\"left\", \"right\"],","    AssignmentPattern: [\"left\", \"right\"],","    ArrayExpression: [\"elements\"],","    ArrayPattern: [\"elements\"],","    ArrowFunctionExpression: [\"params\", \"body\"],","    BlockStatement: [\"body\"],","    BinaryExpression: [\"left\", \"right\"],","    BreakStatement: [\"label\"],","    CallExpression: [\"callee\", \"arguments\"],","    CatchClause: [\"param\", \"body\"],","    ClassBody: [\"body\"],","    ClassDeclaration: [\"id\", \"superClass\", \"body\"],","    ClassExpression: [\"id\", \"superClass\", \"body\"],","    ConditionalExpression: [\"test\", \"consequent\", \"alternate\"],","    ContinueStatement: [\"label\"],","    DebuggerStatement: [],","    DirectiveStatement: [],","    DoWhileStatement: [\"body\", \"test\"],","    EmptyStatement: [],","    ExportAllDeclaration: [\"source\"],","    ExportDefaultDeclaration: [\"declaration\"],","    ExportNamedDeclaration: [\"declaration\", \"specifiers\", \"source\"],","    ExportSpecifier: [\"exported\", \"local\"],","    ExpressionStatement: [\"expression\"],","    ForStatement: [\"init\", \"test\", \"update\", \"body\"],","    ForInStatement: [\"left\", \"right\", \"body\"],","    ForOfStatement: [\"left\", \"right\", \"body\"],","    FunctionDeclaration: [\"id\", \"params\", \"body\"],","    FunctionExpression: [\"id\", \"params\", \"body\"],","    Identifier: [],","    IfStatement: [\"test\", \"consequent\", \"alternate\"],","    ImportDeclaration: [\"specifiers\", \"source\"],","    ImportDefaultSpecifier: [\"local\"],","    ImportNamespaceSpecifier: [\"local\"],","    ImportSpecifier: [\"imported\", \"local\"],","    Literal: [],","    LabeledStatement: [\"label\", \"body\"],","    LogicalExpression: [\"left\", \"right\"],","    MemberExpression: [\"object\", \"property\"],","    MetaProperty: [\"meta\", \"property\"],","    MethodDefinition: [\"key\", \"value\"],","    ModuleSpecifier: [],","    NewExpression: [\"callee\", \"arguments\"],","    ObjectExpression: [\"properties\"],","    ObjectPattern: [\"properties\"],","    Program: [\"body\"],","    Property: [\"key\", \"value\"],","    RestElement: [ \"argument\" ],","    ReturnStatement: [\"argument\"],","    SequenceExpression: [\"expressions\"],","    SpreadElement: [\"argument\"],","    Super: [],","    SwitchStatement: [\"discriminant\", \"cases\"],","    SwitchCase: [\"test\", \"consequent\"],","    TaggedTemplateExpression: [\"tag\", \"quasi\"],","    TemplateElement: [],","    TemplateLiteral: [\"quasis\", \"expressions\"],","    ThisExpression: [],","    ThrowStatement: [\"argument\"],","    TryStatement: [\"block\", \"handler\", \"finalizer\"],","    UnaryExpression: [\"argument\"],","    UpdateExpression: [\"argument\"],","    VariableDeclaration: [\"declarations\"],","    VariableDeclarator: [\"id\", \"init\"],","    WhileStatement: [\"test\", \"body\"],","    WithStatement: [\"object\", \"body\"],","    YieldExpression: [\"argument\"],","","    // JSX","    JSXIdentifier: [],","    JSXNamespacedName: [\"namespace\", \"name\"],","    JSXMemberExpression: [\"object\", \"property\"],","    JSXEmptyExpression: [],","    JSXExpressionContainer: [\"expression\"],","    JSXElement: [\"openingElement\", \"closingElement\", \"children\"],","    JSXClosingElement: [\"name\"],","    JSXOpeningElement: [\"name\", \"attributes\"],","    JSXAttribute: [\"name\", \"value\"],","    JSXText: null,","    JSXSpreadAttribute: [\"argument\"],","","    // Experimental features","    ExperimentalRestProperty: [\"argument\"],","    ExperimentalSpreadProperty: [\"argument\"]","};",""],"l":{"40":1}},"/home/travis/build/npmtest/node-npmtest-espree/node_modules/espree/lib/features.js":{"path":"/home/travis/build/npmtest/node-npmtest-espree/node_modules/espree/lib/features.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":32,"column":2}}},"branchMap":{},"code":["/**"," * @fileoverview The list of feature flags supported by the parser and their default"," *      settings."," * @author Nicholas C. Zakas"," */","","\"use strict\";","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","// None!","","//------------------------------------------------------------------------------","// Public","//------------------------------------------------------------------------------","","module.exports = {","","    // React JSX parsing","    jsx: false,","","    // allow return statement in global scope","    globalReturn: false,","","    // allow implied strict mode","    impliedStrict: false,","","    // allow experimental object rest/spread","    experimentalObjectRestSpread: false","};",""],"l":{"19":1}}}